#ifndef __TFTLCD_H
#define __TFTLCD_H
#include "stm32f4xx.h"
#include "delay.h"
#include "fonts.h"

#define HORIZONTAL 1 //水平
/*条件编译*/
#if HORIZONTAL

#define LCD_XMAX 480
#define LCD_YMAX 320

#else
#define LCD_XMAX 320
#define LCD_YMAX 480

#endif

#define RED	  0XF800 //红色
#define GREEN 0X07E0 //绿色
#define BLUE  0X001F //蓝色 
#define BRED  0XF81F
#define GRED  0XFFE0
#define GBLUE 0X07FF //
#define BLACK 0X0000 //黑色
#define WHITE 0XFFFF //白色
#define CYAN  0x7FFF //浅绿色
#define YELLOW 0xFFE0 //黄色
#define BROWN  0XBC40 //棕色
#define BRRED  0XFC07 //棕红
#define GRAY   0X8430 //灰色
//GUI颜色

#define DARKBLUE      	 0X01CF	//深蓝
#define LIGHTBLUE      	 0X7D7C	//浅蓝 
#define GRAYBLUE       	 0X5458 //灰蓝

#define LCD_PIXEL_WIDTH          0x0140
#define LCD_PIXEL_HEIGHT         0x01E0
#define ABS(X)  ((X) > 0 ? (X) : -(X))

#define LCD_LINE_0               LINE(0)
#define LCD_LINE_1               LINE(1)
#define LCD_LINE_2               LINE(2)
#define LCD_LINE_3               LINE(3)
#define LCD_LINE_4               LINE(4)
#define LCD_LINE_5               LINE(5)
#define LCD_LINE_6               LINE(6)
#define LCD_LINE_7               LINE(7)
#define LCD_LINE_8               LINE(8)
#define LCD_LINE_9               LINE(9)
#define LCD_LINE_10              LINE(10)
#define LCD_LINE_11              LINE(11)
#define LCD_LINE_12              LINE(12)
#define LCD_LINE_13              LINE(13)
#define LCD_LINE_14              LINE(14)
#define LCD_LINE_15              LINE(15)
#define LCD_LINE_16              LINE(16)
#define LCD_LINE_17              LINE(17)
#define LCD_LINE_18              LINE(18)
#define LCD_LINE_19              LINE(19)
#define LCD_LINE_20              LINE(20)
#define LCD_LINE_21              LINE(21)
#define LCD_LINE_22              LINE(22)
#define LCD_LINE_23              LINE(23)
#define LCD_LINE_24              LINE(24)
#define LCD_LINE_25              LINE(25)
#define LCD_LINE_26              LINE(26)
#define LCD_LINE_27              LINE(27)
#define LCD_LINE_28              LINE(28)
#define LCD_LINE_29              LINE(29)

#define On      1
#define Off     0

#define LCD_RAM   *(vu16*)((u32)0x60020000)  //disp Data ADDR
#define LCD_REG   *(vu16*)((u32)0x60000000)	 //disp Reg  ADDR
  /*液晶屏的字体*/
static sFONT *LCD_Currentfonts;
  /*液晶屏的前景色和背景色*/
static __IO uint16_t TextColor = 0x0000, BackColor = 0xFFFF;
//#define LCD_LED(x) (x?(GPIO_SetBits(GPIOB,GPIO_Pin_5)):(GPIO_ResetBits(GPIOB,GPIO_Pin_5)))
#define LCD_RST(x) (x?(GPIO_SetBits(GPIOB,GPIO_Pin_4)):(GPIO_ResetBits(GPIOB,GPIO_Pin_4)))
#define LCD_WriteRAM_Start()   LCD_REG = 0x2C
/************************************************************************************************************** 
 * 描述  ：写LCD寄存器函数        
 *****************************************************************************************************************/
void LCD_WriteReg(uint8_t LCD_Reg, uint16_t LCD_RegValue);
/**************************************************************************************************************
 * 描述  ：读取LCD寄存器的值?       
 *****************************************************************************************************************/
uint16_t LCD_ReadReg(uint8_t LCD_Reg);
/**************************************************************************************************************
/***************************************************************
 * 描述  ：向LCD的RAM写数据        
 *****************************************************************************************************************/
void LCD_WriteRAM(uint16_t RGB_data);
/**************************************************************************************************************
 * 描述  ：读取LCD的RAM数据       
 *****************************************************************************************************************/
uint16_t LCD_ReadRAM(void);

/**************************************************************************************************************
 * 描述  ：LCD打开显示        
 *****************************************************************************************************************/
void LCD_DisplayOn(void);
/**************************************************************************************************************
 * 描述  ：LCD关闭显示       
 *****************************************************************************************************************/
void LCD_DisplayOff(void);
/**********************************************************
 * 描述  ：设置LCD刷屏模式       
 *****************************************************************************************************************/
void LCD_SetMode(uint8_t mode);
/**********************************************************
 * 描述  ：LCD清屏函数       
 *****************************************************************************************************************/
void LCD_Clear(uint16_t Color);
/**********************************************************
 * 描述  ：LCD设置光标位置函数      
 *****************************************************************************************************************/
void LCD_SetCursor(uint16_t Xpos, uint16_t Ypos);
/**********************************************************
 * 描述  ：设置LCD的前景色和背景色       
 *****************************************************************************************************************/
void LCD_SetColors(__IO uint16_t _TextColor, __IO uint16_t _BackColor);
/*********************************************************
 * 描述  ：获取LCD的前景色和背景色      
 *****************************************************************************************************************/
void LCD_GetColors(__IO uint16_t *_TextColor, __IO uint16_t *_BackColor);
/*********************************************************
 * 描述  ：设置LCD的字体   
 *****************************************************************************************************************/
void LCD_SetFont(sFONT *fonts);
/*********************************************************
 * 描述  ：LCD初始化函数     
 *****************************************************************************************************************/
void TFTLCD_Init(void);
/*********************************************************
 * 描述  ：设置LCD的字体
 * 调用  ：外部调用        
 *****************************************************************************************************************/
sFONT *LCD_GetFont(void);
/*********************************************************
 * 描述  ：LCD画一个字符
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void LCD_DrawChar(uint16_t Xpos, uint16_t Ypos, const uint16_t *c);
/*********************************************************
 * 描述  ：LCD显示一个字符
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void LCD_DisplayChar(uint16_t Xpos, uint16_t Ypos, uint8_t Ascii);
/*********************************************************
 * 描述  ：LCD显示一串字符
 *****************************************************************************************************************/
void LCD_DrawString(u16 xpos, u16 ypos, char *ptr);
/*********************************************************
 * 描述  ：LCD显示一个数字    
 *****************************************************************************************************************/	 
void LCD_DrawNum(u16 x, u16 y, s32 num, u8 len);
void LCD_Display(u16 row, u16 column, u8 *pdata);//显示字符和汉子混合
/*********************************************************
 * 描述  ：设置某个特定的填充区域
 *****************************************************************************************************************/
void LCD_SetWindow(uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint8_t Height);
/*********************************************************
 * 描述  ：画水平线
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void TFTLCD_DrawHLine(uint16_t Xpos, uint16_t Ypos, uint16_t Length);
/********************************************************
 * 描述  ：画垂直线
 *****************************************************************************************************************/
void TFTLCD_DrawVLine(uint16_t Xpos, uint16_t Ypos, uint16_t Length);
/********************************************************
 * 描述  ：画矩形函数
 *****************************************************************************************************************/
void LCD_DrawRect(uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint16_t Height);
/********************************************************
 * 描述  ：画圆函数
 *****************************************************************************************************************/
void LCD_DrawCircle(uint16_t Xpos, uint16_t Ypos, uint16_t Radius);
/***********************************************
 * 输入  ：const uint32_t *Pict 画一个全屏单色的取膜数据
 * 描述  ：画一个单色的全屏图片函数 
 *****************************************************************************************************************/
void LCD_DrawMonoPict(const uint32_t *Pict);
/**************************************************************************************************************
 * 函数名：DrawPixel()
 * 输入  ：int16_t x, int16_t y  点的坐标
 * 输出  ：void
 * 描述  ：画一个象素点
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void DrawPixel(uint16_t x, uint16_t y);
void GUI_SetPoint(u16 xpos, u16 ypos,u16 color);
u16 LCD_BGR2RGB(u16 c);
u16 GUI_GetPoint(u16 xpos,u16 ypos);
/**************************************************************************************************************
 * 函数名：LCD_DrawUniLine()
 * 输入  ：uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2 起始点坐标和终点坐标
 * 输出  ：void
 * 描述  ：画任意方向的直线
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void LCD_DrawUniLine(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2);
/**************************************************************************************************************
 * 函数名：LCD_FillCircle()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint16_t Radius 填充圆的圆心和半径
 * 输出  ：void
 * 描述  ：画一个填充圆
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void LCD_FillCircle(uint16_t Xpos, uint16_t Ypos, uint16_t Radius);
/**************************************************************************************************************
 * 函数名：LCD_FillRect()
 * 输入  ：uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint16_t Height 填充矩形左上角点、宽和高
 * 输出  ：void
 * 描述  ：画一个填充的矩形
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void TFTLCD_FillRect(uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint16_t Height);
/**************************************************************************************************************
 * 函数名：LCD_SetTextColor()
 * 输入  ：uint16_t Color 前景色
 * 输出  ：void
 * 描述  ：设置LCD的前景色
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void LCD_SetTextColor(__IO uint16_t Color);
/**************************************************************************************************************
 * 函数名：LCD_SetBackColor()
 * 输入  ：uint16_t Color 背景色
 * 输出  ：void
 * 描述  ：设置LCD的背景色
 * 调用  ：外部调用        
 *****************************************************************************************************************/
void LCD_SetBackColor(__IO uint16_t Color);
/**************************************************************************************************************
 * 函数名：ClearAera()
 * 输入  ：uint16_t x,uint16_t y,uint16_t w,uint16_t h  uint16_t tempcolor 清除的位置，长度和宽度填充的颜色
 * 输出  ：void
 * 描述  ：LCD清除某个区域
 * 调用  ：外部调用        
 *****************************************************************************************************************/	
void ClearAera(uint16_t x,uint16_t y,uint16_t w,uint16_t h);
/***********************************************************
 * 输入  :Xpos Ypos：起始坐标 pic_width：图片宽度 pic_high:高度 u8 *p   图片取膜数据
 * 输出  ：void
 * 描述  ：LCD画一张全屏图片
 * 调用  ：外部调用        
 *****************************************************************************************************************/	
void LCD_DrawImage(uint16_t Xpos, uint16_t Ypos,const u8 *p);

void LCD_brush_screen();//刷屏色测试

#endif
