<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Output\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Output\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Wed Jul 01 23:58:15 2015
<BR><P>
<H3>Maximum Stack Usage =        736 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
_cbDialog3 &rArr; DROPDOWN_SetFont &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[4f1]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[21]">CAN1_RX0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">CAN1_RX0_IRQHandler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[48c]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48c]">_Findx1</a><BR>
 <LI><a href="#[48b]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48b]">_Findx0</a><BR>
 <LI><a href="#[48a]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48a]">_Findy1</a><BR>
 <LI><a href="#[480]">WM__InvalidateRectEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[480]">WM__InvalidateRectEx</a><BR>
 <LI><a href="#[47e]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47e]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[34c]">WM__SendMessage</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b5]">WM_DefaultProc</a><BR>
 <LI><a href="#[49c]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49d]">WM_ForEachDesc</a><BR>
 <LI><a href="#[354]">WM_ResizeWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[466]">WM__UpdateChildPositions</a><BR>
 <LI><a href="#[4b0]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4b0]">_MoveDescendents</a><BR>
 <LI><a href="#[488]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e0]">WM_DeleteWindow</a><BR>
 <LI><a href="#[4ac]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4ac]">_GetDialogItem</a><BR>
 <LI><a href="#[4b3]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4b3]">_Screen2hWin</a><BR>
 <LI><a href="#[4c2]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c2]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[494]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[494]">_PaintTransChildren</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ADC_IRQHandler</a> from bsp_adc.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2b3]">BUTTON_Callback</a> from button.o(.text) referenced from button.o(.text)
 <LI><a href="#[b4]">BUTTON_CreateIndirect</a> from button_createindirect.o(.text) referenced 21 times from scope.o(.constdata)
 <LI><a href="#[7]">BusFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[21]">CAN1_RX0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[22]">CAN1_RX1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[23]">CAN1_SCE_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[20]">CAN1_TX_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4d]">CAN2_RX0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4e]">CAN2_RX1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4f]">CAN2_SCE_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4c]">CAN2_TX_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2d2]">CHECKBOX_Callback</a> from checkbox.o(.text) referenced from checkbox.o(.text)
 <LI><a href="#[bb]">CHECKBOX_CreateIndirect</a> from checkbox_createindirect.o(.text) referenced 3 times from scop_menu.o(.constdata)
 <LI><a href="#[5c]">CRYP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5b]">DCMI_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1e]">DMA1_Stream6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3c]">DMA1_Stream7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[48]">DMA2_Stream3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[49]">DMA2_Stream4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[51]">DMA2_Stream5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[52]">DMA2_Stream6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[53]">DMA2_Stream7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[30a]">DROPDOWN_Callback</a> from dropdown.o(.text) referenced from dropdown.o(.text)
 <LI><a href="#[ba]">DROPDOWN_CreateIndirect</a> from dropdown_createindirect.o(.text) referenced 7 times from scop_menu.o(.constdata)
 <LI><a href="#[a]">DebugMon_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[326]">EDIT_Callback</a> from edit.o(.text) referenced from edit.o(.text)
 <LI><a href="#[bc]">EDIT_CreateIndirect</a> from edit_createindirect.o(.text) referenced 2 times from scop_menu.o(.constdata)
 <LI><a href="#[4a]">ETH_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4b]">ETH_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[13]">EXTI0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[35]">EXTI15_10_IRQHandler</a> from exti.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[15]">EXTI2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[16]">EXTI3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[17]">EXTI4_IRQHandler</a> from exti.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[24]">EXTI9_5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5e]">FPU_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[34b]">FRAMEWIN_Callback</a> from framewin.o(.text) referenced from framewin.o(.text)
 <LI><a href="#[b3]">FRAMEWIN_CreateIndirect</a> from framewin_createindirect.o(.text) referenced from scope.o(.constdata)
 <LI><a href="#[67]">FRAMEWIN__cbClient</a> from framewin.o(.text) referenced from framewin.o(.text)
 <LI><a href="#[3d]">FSMC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[38a]">GRAPH_Callback</a> from graph.o(.text) referenced from graph.o(.text)
 <LI><a href="#[b7]">GRAPH_CreateIndirect</a> from graph_createindirect.o(.text) referenced from scope.o(.constdata)
 <LI><a href="#[93]">GUIMONO_DispChar</a> from guicharm.o(.text) referenced from f6x8.o(.constdata)
 <LI><a href="#[94]">GUIMONO_GetCharDistX</a> from guicharm.o(.text) referenced from f6x8.o(.constdata)
 <LI><a href="#[95]">GUIMONO_GetFontInfo</a> from guicharm.o(.text) referenced from f6x8.o(.constdata)
 <LI><a href="#[96]">GUIMONO_IsInFont</a> from guicharm.o(.text) referenced from f6x8.o(.constdata)
 <LI><a href="#[97]">GUIPROP_DispChar</a> from guicharp.o(.text) referenced 4 times from f08_1.o(.constdata)
 <LI><a href="#[98]">GUIPROP_GetCharDistX</a> from guicharp.o(.text) referenced 4 times from f08_1.o(.constdata)
 <LI><a href="#[99]">GUIPROP_GetFontInfo</a> from guicharp.o(.text) referenced 4 times from f08_1.o(.constdata)
 <LI><a href="#[9a]">GUIPROP_IsInFont</a> from guicharp.o(.text) referenced 4 times from f08_1.o(.constdata)
 <LI><a href="#[9b]">GUI_MEMDEV__Color2Index</a> from guidev.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[9d]">GUI_MEMDEV__GetIndexMask</a> from guidev.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[a3]">GUI_MEMDEV__GetRect</a> from guidev.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[9c]">GUI_MEMDEV__Index2Color</a> from guidev.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[a7]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[a6]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[a8]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[aa]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[5d]">HASH_RNG_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[56]">I2C3_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[55]">I2C3_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[64]">LCD_Index2Color_M565</a> from lcdpm565_index2color.o(.text) referenced from lcd_l0_generic.o(.text)
 <LI><a href="#[86]">LCD_L0_Color2Index</a> from lcd_l0_generic.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[89]">LCD_L0_DrawBitmap</a> from lcdtemplate.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[8a]">LCD_L0_DrawHLine</a> from lcdtemplate.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[8b]">LCD_L0_DrawVLine</a> from lcdtemplate.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[8c]">LCD_L0_FillRect</a> from lcdtemplate.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[92]">LCD_L0_GetDevFunc</a> from lcdtemplate.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[88]">LCD_L0_GetIndexMask</a> from lcd_l0_generic.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[8d]">LCD_L0_GetPixelIndex</a> from lcdtemplate.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[8e]">LCD_L0_GetRect</a> from lcd_l0_generic.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[87]">LCD_L0_Index2Color</a> from lcd_l0_generic.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[91]">LCD_L0_SetLUTEntry</a> from lcdtemplate.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[8f]">LCD_L0_SetPixelIndex</a> from lcdtemplate.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[90]">LCD_L0_XorPixel</a> from lcdtemplate.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[3de]">LISTBOX_Callback</a> from listbox.o(.text) referenced from listbox.o(.text)
 <LI><a href="#[6]">MemManage_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[50]">OTG_FS_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[37]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[58]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5a]">OTG_HS_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[59]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[e]">PVD_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[41e]">RADIO_Callback</a> from radio.o(.text) referenced from radio.o(.text)
 <LI><a href="#[b5]">RADIO_CreateIndirect</a> from radio_createindirect.o(.text) referenced 2 times from scope.o(.constdata)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[36]">RTC_Alarm_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[10]">RTC_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[442]">SCROLLBAR_Callback</a> from scrollbar.o(.text) referenced from scrollbar.o(.text)
 <LI><a href="#[3e]">SDIO_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[453]">SLIDER_Callback</a> from slider.o(.text) referenced from slider.o(.text)
 <LI><a href="#[b6]">SLIDER_CreateIndirect</a> from slider_createindirect.o(.text) referenced 2 times from scope.o(.constdata)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[31]">SPI2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[40]">SPI3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5f]">SystemInit</a> from system_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(.text)
 <LI><a href="#[f]">TAMP_STAMP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[45f]">TEXT_Callback</a> from text.o(.text) referenced from text.o(.text)
 <LI><a href="#[b8]">TEXT_CreateIndirect</a> from text_createindirect.o(.text) referenced 7 times from scope.o(.constdata)
 <LI><a href="#[25]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[28]">TIM1_CC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[27]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[26]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[29]">TIM2_IRQHandler</a> from main.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2a]">TIM3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2b]">TIM4_IRQHandler</a> from timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3f]">TIM5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[43]">TIM6_DAC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[44]">TIM7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[38]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3b]">TIM8_CC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3a]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[39]">TIM8_UP_TIM13_IRQHandler</a> from bsp_adc.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[41]">UART4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[42]">UART5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[32]">USART1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[34]">USART3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[54]">USART6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[ae]">WIDGET_EFFECT_3D_DrawUp</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[472]">WINDOW_Callback</a> from window.o(.text) referenced from window.o(.text)
 <LI><a href="#[b9]">WINDOW_CreateIndirect</a> from window.o(.text) referenced 3 times from scop_menu.o(.constdata)
 <LI><a href="#[61]">WM_HandlePID</a> from wmtouch.o(.text) referenced from gui_pid.o(.text)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[65]">_AddKeyDec</a> from editdec.o(.text) referenced from editdec.o(.text)
 <LI><a href="#[81]">_CalcSizeOfChar</a> from gui_uc_encodenone.o(.text) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[71]">_Callback</a> from multipage.o(.text) referenced from multipage.o(.text)
 <LI><a href="#[72]">_ClientCallback</a> from multipage.o(.text) referenced from multipage.o(.text)
 <LI><a href="#[85]">_DispLine_SJIS</a> from guiencjs.o(.text) referenced from guiencjs.o(.constdata)
 <LI><a href="#[ab]">_Draw</a> from gui_draw_self.o(.text) referenced from gui_draw_self.o(.constdata)
 <LI><a href="#[68]">_Draw</a> from framewin_buttonclose.o(.text) referenced 3 times from framewin_buttonclose.o(.text)
 <LI><a href="#[9e]">_DrawBitmap</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[9f]">_DrawHLine</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[a0]">_DrawVLine</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[82]">_Encode</a> from gui_uc_encodenone.o(.text) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[a1]">_FillRect</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[a9]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[7f]">_GetCharCode</a> from gui_uc_encodenone.o(.text) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[80]">_GetCharSize</a> from gui_uc_encodenone.o(.text) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[83]">_GetLineDistX_SJIS</a> from guiencjs.o(.text) referenced from guiencjs.o(.constdata)
 <LI><a href="#[84]">_GetLineLen_SJIS</a> from guiencjs.o(.text) referenced from guiencjs.o(.constdata)
 <LI><a href="#[a2]">_GetPixelIndex</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[ac]">_GetXSize</a> from gui_draw_self.o(.text) referenced from gui_draw_self.o(.constdata)
 <LI><a href="#[ad]">_GetYSize</a> from gui_draw_self.o(.text) referenced from gui_draw_self.o(.constdata)
 <LI><a href="#[73]">_HandleSetValue</a> from radio_setgroupid.o(.text) referenced from radio_setgroupid.o(.text)
 <LI><a href="#[6f]">_OnDelete</a> from graph_data_yt.o(.text) referenced from graph_data_yt.o(.text)
 <LI><a href="#[6e]">_OnPaint</a> from graph_data_yt.o(.text) referenced 2 times from graph_data_yt.o(.text)
 <LI><a href="#[a4]">_SetPixelIndex</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[62]">_TempHide</a> from guicurs.o(.text) referenced from guicurs.o(.text)
 <LI><a href="#[63]">_TempUnhide</a> from guicurs.o(.text) referenced from guicurs.o(.text)
 <LI><a href="#[66]">_UpdateBuffer</a> from editdec.o(.text) referenced from editdec.o(.text)
 <LI><a href="#[77]">_UserDraw</a> from scope.o(.text) referenced from scope.o(.text)
 <LI><a href="#[af]">_WIDGET_EFFECT_3D_DrawDown</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[b1]">_WIDGET_EFFECT_3D_DrawDownRect</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[b0]">_WIDGET_EFFECT_3D_DrawUpRect</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[b2]">_WIDGET_EFFECT_3D_GetRect</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[a5]">_XorPixel</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[bd]">__main</a> from __main.o(!!!main) referenced from startup_stm32f4xx.o(.text)
 <LI><a href="#[78]">_cbCallback</a> from scope.o(.text) referenced from scope.o(.text)
 <LI><a href="#[69]">_cbClose</a> from framewin_buttonclose.o(.text) referenced from framewin_buttonclose.o(.text)
 <LI><a href="#[7a]">_cbDialog1</a> from scop_menu.o(.text) referenced from scop_menu.o(.text)
 <LI><a href="#[7b]">_cbDialog2</a> from scop_menu.o(.text) referenced from scop_menu.o(.text)
 <LI><a href="#[7c]">_cbDialog3</a> from scop_menu.o(.text) referenced from scop_menu.o(.text)
 <LI><a href="#[79]">_cbFrameWin</a> from scop_menu.o(.text) referenced from scop_menu.o(.text)
 <LI><a href="#[76]">_cbInvalidateOne</a> from wm_bringtotop.o(.text) referenced from wm_bringtotop.o(.text)
 <LI><a href="#[6b]">_cbMax</a> from framewin_buttonmax.o(.text) referenced from framewin_buttonmax.o(.text)
 <LI><a href="#[6d]">_cbMin</a> from framewin_buttonmin.o(.text) referenced from framewin_buttonmin.o(.text)
 <LI><a href="#[74]">_cbPaintMemDev</a> from wm.o(.text) referenced from wm.o(.text)
 <LI><a href="#[7e]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[7d]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[75]">cbBackWin</a> from wm.o(.text) referenced from wm.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[bd]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[be]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[c0]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[519]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[51a]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[51b]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[51c]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[51d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[c1]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[4da]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[51e]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[cc]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[c3]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[51f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[520]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[521]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[522]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[523]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[524]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[525]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[c7]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[526]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[527]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[528]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[529]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[52a]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[52b]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[52c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[52d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[52e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[52f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[530]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[531]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[532]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[d1]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[533]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[534]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[535]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[536]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[537]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[538]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[bf]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[539]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[c9]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[cb]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[53a]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[cd]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[53b]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[4f2]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[d0]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[53c]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[d2]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4f1]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ce]"></a>main</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = main &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDAC
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveTaskCreat
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_signal
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_PWM_OUTPUT
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_PWM_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Signal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM6_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[29]"></a>TIM2_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM2_IRQHandler &rArr; GUI_TOUCH_Exec &rArr; GUI_TOUCH_X_MeasureY &rArr; ADS_Read_AD &rArr; ADS_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel1Data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[d4]"></a>SysTick_Init</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53d]"></a>SYS_delay_nus</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)

<P><STRONG><a name="[53e]"></a>SYS_delay_nms</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>delay_nms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_brush_screen
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Painting
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
</UL>

<P><STRONG><a name="[f7]"></a>delay_nus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read_AD
</UL>

<P><STRONG><a name="[53f]"></a>Delay_nop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>Delay</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[d8]"></a>COM6_Init</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = COM6_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[f0]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>

<P><STRONG><a name="[f3]"></a>ADS_Write_Byte</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADS_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read_AD
</UL>

<P><STRONG><a name="[f6]"></a>ADS_Read_AD</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ADS_Read_AD &rArr; ADS_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Write_Byte
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nus
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetPhyXY
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
</UL>

<P><STRONG><a name="[f9]"></a>DrawAdjustPoint</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
</UL>

<P><STRONG><a name="[100]"></a>Touch_GetPhyXY</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read_AD
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_pwm
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Painting
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
</UL>

<P><STRONG><a name="[105]"></a>AdjustTouchPanel</STRONG> (Thumb, 744 bytes, Stack size 56 bytes, touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawString
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawNum
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetPhyXY
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAdjustPoint
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[10d]"></a>DrawTouchPoint</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Painting
</UL>

<P><STRONG><a name="[dc]"></a>Touch_Init</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Touch_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10e]"></a>Touch_Painting</STRONG> (Thumb, 416 bytes, Stack size 0 bytes, touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawString
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouchPoint
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetPhyXY
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms
</UL>

<P><STRONG><a name="[110]"></a>Change_pwm</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetPhyXY
</UL>

<P><STRONG><a name="[118]"></a>LCD_WR_REG</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tftlcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
</UL>

<P><STRONG><a name="[119]"></a>LCD_WR_DATA</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tftlcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
</UL>

<P><STRONG><a name="[11c]"></a>LCD_WriteReg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetMode
</UL>

<P><STRONG><a name="[117]"></a>LCD_ReadReg</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nus
</UL>

<P><STRONG><a name="[11f]"></a>LCD_WriteRAM</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawMonoPict
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>

<P><STRONG><a name="[540]"></a>LCD_ReadRAM</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tftlcd.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>LCD_SetFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tftlcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
</UL>

<P><STRONG><a name="[106]"></a>LCD_Clear</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, tftlcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_brush_screen
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Painting
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
</UL>

<P><STRONG><a name="[db]"></a>TFTLCD_Init</STRONG> (Thumb, 402 bytes, Stack size 8 bytes, tftlcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TFTLCD_Init &rArr; LCD_FSMC_Config &rArr; LCD_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_Init
</UL>

<P><STRONG><a name="[11b]"></a>LCD_SetMode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>

<P><STRONG><a name="[11e]"></a>LCD_SetCursor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_display_hzchar
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Show_Chinese
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawMonoPict
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>

<P><STRONG><a name="[11d]"></a>LCD_SetWindow</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>

<P><STRONG><a name="[107]"></a>LCD_SetColors</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Painting
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
</UL>

<P><STRONG><a name="[541]"></a>LCD_GetColors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tftlcd.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>LCD_SetTextColor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAera
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Show_Chinese
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillCircle
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_FillRect
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAdjustPoint
</UL>

<P><STRONG><a name="[10f]"></a>LCD_SetBackColor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_display_hzchar
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Show_Chinese
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Painting
</UL>

<P><STRONG><a name="[542]"></a>LCD_GetFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tftlcd.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>DrawPixel</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_display_hzchar
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouchPoint
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAdjustPoint
</UL>

<P><STRONG><a name="[543]"></a>GUI_SetPoint</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, tftlcd.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>LCD_BGR2RGB</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPoint
</UL>

<P><STRONG><a name="[120]"></a>GUI_GetPoint</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BGR2RGB
</UL>

<P><STRONG><a name="[122]"></a>TFTLCD_DrawHLine</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAera
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillCircle
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_FillRect
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>

<P><STRONG><a name="[123]"></a>TFTLCD_DrawVLine</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_FillRect
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>

<P><STRONG><a name="[ff]"></a>LCD_DrawRect</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_DrawVLine
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAdjustPoint
</UL>

<P><STRONG><a name="[fc]"></a>LCD_DrawCircle</STRONG> (Thumb, 292 bytes, Stack size 68 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillCircle
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAdjustPoint
</UL>

<P><STRONG><a name="[124]"></a>LCD_DrawMonoPict</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>

<P><STRONG><a name="[125]"></a>TFTLCD_FillRect</STRONG> (Thumb, 124 bytes, Stack size 28 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_DrawVLine
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_DrawHLine
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
</UL>

<P><STRONG><a name="[126]"></a>LCD_FillCircle</STRONG> (Thumb, 164 bytes, Stack size 52 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_DrawHLine
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
</UL>

<P><STRONG><a name="[127]"></a>LCD_DrawUniLine</STRONG> (Thumb, 184 bytes, Stack size 44 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>

<P><STRONG><a name="[128]"></a>LCD_DrawChar</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>

<P><STRONG><a name="[129]"></a>LCD_DisplayChar</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawString
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawNum
</UL>

<P><STRONG><a name="[108]"></a>LCD_DrawString</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Painting
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
</UL>

<P><STRONG><a name="[12a]"></a>mypow</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawNum
</UL>

<P><STRONG><a name="[10a]"></a>LCD_DrawNum</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mypow
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
</UL>

<P><STRONG><a name="[12b]"></a>LCD_Show_Chinese</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
</UL>

<P><STRONG><a name="[12c]"></a>lcd_display_hzchar</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display
</UL>

<P><STRONG><a name="[12d]"></a>LCD_Display</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_display_hzchar
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[12e]"></a>ClearAera</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_DrawHLine
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
</UL>

<P><STRONG><a name="[544]"></a>LCD_DrawImage</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, tftlcd.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>LCD_brush_screen</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, tftlcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[df]"></a>Timer2_Init</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Timer2_Init &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d5]"></a>TIM4_Init</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM4_Init &rArr; TIM_PWMIConfig &rArr; TI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectSlaveMode
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectMasterSlaveMode
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = TIM4_IRQHandler &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture2
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[13e]"></a>EXTI_Configuration</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, exti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>

<P><STRONG><a name="[17]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EXTI15_10_IRQHandler &rArr; GUI_TOUCH_Exec &rArr; GUI_TOUCH_X_MeasureY &rArr; ADS_Read_AD &rArr; ADS_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[149]"></a>TIM4_PWM_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pwm_output.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Mode_Config
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_GPIO_Config
</UL>

<P><STRONG><a name="[14a]"></a>TIM4_PWM_OUTPUT</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, pwm_output.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
</UL>

<P><STRONG><a name="[d6]"></a>TIM5_PWM_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pwm_output.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIM5_PWM_Init &rArr; TIM5_Mode_Config &rArr; TIM_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>TIM5_PWM_OUTPUT</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, pwm_output.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM5_PWM_OUTPUT
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>bsp_InitADC</STRONG> (Thumb, 560 bytes, Stack size 152 bytes, bsp_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bsp_InitADC &rArr; TIM1_Config &rArr; TIM_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITConfig
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMARequestAfterLastTransferCmd
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AnalogWatchdogThresholdsConfig
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AnalogWatchdogSingleChannelConfig
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AnalogWatchdogCmd
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[164]"></a>Time8Recorder</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, bsp_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Time8Recorder &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Open
</UL>

<P><STRONG><a name="[166]"></a>ADC_DMA_Open</STRONG> (Thumb, 388 bytes, Stack size 96 bytes, bsp_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ADC_DMA_Open &rArr; TIM1_Config &rArr; TIM_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time8Recorder
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderValueChanged
</UL>

<P><STRONG><a name="[168]"></a>ADC_DMA_Close</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMA_Close
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderValueChanged
</UL>

<P><STRONG><a name="[1f]"></a>ADC_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, bsp_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[169]"></a>TIM8_MeasureTrigConfig</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, bsp_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>

<P><STRONG><a name="[39]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bsp_adc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[16a]"></a>TIM6_Config</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, bsp_dac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM6_Config &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectOutputTrigger
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDAC
</UL>

<P><STRONG><a name="[16c]"></a>DAC_GPIOConfig</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bsp_dac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DAC_GPIOConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDAC
</UL>

<P><STRONG><a name="[16d]"></a>DAC_Ch1_WaveConfig</STRONG> (Thumb, 134 bytes, Stack size 88 bytes, bsp_dac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = DAC_Ch1_WaveConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_DMACmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Cmd
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDAC
</UL>

<P><STRONG><a name="[d9]"></a>bsp_InitDAC</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, bsp_dac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bsp_InitDAC &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Ch1_WaveConfig
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_GPIOConfig
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_Config
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[545]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>NVIC_Init</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_MeasureTrigConfig
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[546]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[547]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[548]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[549]"></a>EXTI_DeInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>EXTI_Init</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, stm32f4xx_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[54a]"></a>EXTI_StructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[54b]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[54c]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[54d]"></a>EXTI_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>EXTI_GetITStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
</UL>

<P><STRONG><a name="[141]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
</UL>

<P><STRONG><a name="[54e]"></a>FSMC_NORSRAMDeInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSMC_NORSRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
</UL>

<P><STRONG><a name="[54f]"></a>FSMC_NORSRAMStructInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
</UL>

<P><STRONG><a name="[550]"></a>FSMC_NANDDeInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[551]"></a>FSMC_NANDInit</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[552]"></a>FSMC_NANDStructInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[553]"></a>FSMC_NANDCmd</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[554]"></a>FSMC_NANDECCCmd</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[555]"></a>FSMC_GetECC</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[556]"></a>FSMC_PCCARDDeInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[557]"></a>FSMC_PCCARDInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[558]"></a>FSMC_PCCARDStructInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[559]"></a>FSMC_PCCARDCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[55a]"></a>FSMC_ITConfig</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[55b]"></a>FSMC_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[55c]"></a>FSMC_ClearFlag</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[55d]"></a>FSMC_GetITStatus</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[55e]"></a>FSMC_ClearITPendingBit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>GPIO_DeInit</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>

<P><STRONG><a name="[ec]"></a>GPIO_Init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM6_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_GPIOConfig
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_GPIO_Config
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_GPIO_Config
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[55f]"></a>GPIO_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[560]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_pwm
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Painting
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read_AD
</UL>

<P><STRONG><a name="[561]"></a>GPIO_ReadInputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[562]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[563]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read_AD
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Write_Byte
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
</UL>

<P><STRONG><a name="[f5]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read_AD
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Write_Byte
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
</UL>

<P><STRONG><a name="[564]"></a>GPIO_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[565]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[566]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_FSMC_Config
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM6_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_GPIO_Config
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_GPIO_Config
</UL>

<P><STRONG><a name="[175]"></a>USART_DeInit</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[ed]"></a>USART_Init</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM6_Init
</UL>

<P><STRONG><a name="[567]"></a>USART_StructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[568]"></a>USART_ClockInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[569]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM6_Init
</UL>

<P><STRONG><a name="[56a]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[56b]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[56c]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[56d]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[56e]"></a>USART_SetAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[56f]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[570]"></a>USART_WakeUpConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[571]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[572]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[573]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[574]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[575]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[576]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[577]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[578]"></a>USART_IrDAConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[579]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[57a]"></a>USART_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[57b]"></a>USART_ITConfig</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[ef]"></a>USART_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM6_Init
</UL>

<P><STRONG><a name="[57c]"></a>USART_GetITStatus</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[57d]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[57e]"></a>RCC_DeInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[57f]"></a>RCC_HSEConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[179]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[178]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[580]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[581]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[582]"></a>RCC_LSEConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[583]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[584]"></a>RCC_PLLConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[585]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[586]"></a>RCC_PLLI2SConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[587]"></a>RCC_PLLI2SCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[588]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[589]"></a>RCC_MCO1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58a]"></a>RCC_MCO2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58b]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58c]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58d]"></a>RCC_HCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58e]"></a>RCC_PCLK1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58f]"></a>RCC_PCLK2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[590]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[591]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[592]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[593]"></a>RCC_I2SCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM6_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Ch1_WaveConfig
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_GPIOConfig
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_GPIO_Config
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_GPIO_Config
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[594]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
</UL>

<P><STRONG><a name="[131]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Ch1_WaveConfig
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_Config
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Mode_Config
</UL>

<P><STRONG><a name="[ea]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM6_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_MeasureTrigConfig
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
</UL>

<P><STRONG><a name="[174]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[595]"></a>RCC_AHB2PeriphResetCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[596]"></a>RCC_AHB3PeriphResetCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[177]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_DeInit
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[176]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[597]"></a>RCC_AHB1PeriphClockLPModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[598]"></a>RCC_AHB2PeriphClockLPModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[599]"></a>RCC_AHB3PeriphClockLPModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[59a]"></a>RCC_APB1PeriphClockLPModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[59b]"></a>RCC_APB2PeriphClockLPModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[59c]"></a>RCC_ITConfig</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[59d]"></a>RCC_ClearFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[59e]"></a>RCC_GetITStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[59f]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>TIM_DeInit</STRONG> (Thumb, 376 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_MeasureTrigConfig
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time8Recorder
</UL>

<P><STRONG><a name="[132]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_Config
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_MeasureTrigConfig
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time8Recorder
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Mode_Config
</UL>

<P><STRONG><a name="[156]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_Config
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
</UL>

<P><STRONG><a name="[5a0]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5a1]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5a2]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5a3]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5a4]"></a>TIM_GetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5a5]"></a>TIM_GetPrescaler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5a6]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5a7]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Mode_Config
</UL>

<P><STRONG><a name="[5a8]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5a9]"></a>TIM_SetClockDivision</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_Config
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_MeasureTrigConfig
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Close
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time8Recorder
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Mode_Config
</UL>

<P><STRONG><a name="[14f]"></a>TIM_OC1Init</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
</UL>

<P><STRONG><a name="[151]"></a>TIM_OC2Init</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
</UL>

<P><STRONG><a name="[145]"></a>TIM_OC3Init</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Mode_Config
</UL>

<P><STRONG><a name="[147]"></a>TIM_OC4Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Mode_Config
</UL>

<P><STRONG><a name="[5aa]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ab]"></a>TIM_SelectOCxM</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[153]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_PWM_OUTPUT
</UL>

<P><STRONG><a name="[154]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_PWM_OUTPUT
</UL>

<P><STRONG><a name="[14b]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_PWM_OUTPUT
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_OUTPUT
</UL>

<P><STRONG><a name="[14c]"></a>TIM_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_PWM_OUTPUT
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_OUTPUT
</UL>

<P><STRONG><a name="[5ac]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ad]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ae]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5af]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
</UL>

<P><STRONG><a name="[152]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
</UL>

<P><STRONG><a name="[146]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Mode_Config
</UL>

<P><STRONG><a name="[148]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Mode_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Mode_Config
</UL>

<P><STRONG><a name="[5b0]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5b1]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5b2]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5b3]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5b4]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5b5]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5b6]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5b7]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5b8]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5b9]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ba]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5bb]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5bc]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5bd]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5be]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5bf]"></a>TIM_CCxCmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5c0]"></a>TIM_CCxNCmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[182]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[180]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
</UL>

<P><STRONG><a name="[17e]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
</UL>

<P><STRONG><a name="[17a]"></a>TIM_ICInit</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[5c1]"></a>TIM_ICStructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>TIM_PWMIConfig</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_PWMIConfig &rArr; TI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
</UL>

<P><STRONG><a name="[13c]"></a>TIM_GetCapture1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[13b]"></a>TIM_GetCapture2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[5c2]"></a>TIM_GetCapture3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5c3]"></a>TIM_GetCapture4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5c4]"></a>TIM_BDTRConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5c5]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[157]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config
</UL>

<P><STRONG><a name="[5c6]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5c7]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>TIM_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_MeasureTrigConfig
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time8Recorder
</UL>

<P><STRONG><a name="[5c8]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5c9]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ca]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>TIM_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[e5]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[5cb]"></a>TIM_DMAConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5cc]"></a>TIM_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5cd]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ce]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[183]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[184]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[186]"></a>TIM_ETRConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[185]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[187]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[16b]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_Config
</UL>

<P><STRONG><a name="[138]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
</UL>

<P><STRONG><a name="[139]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
</UL>

<P><STRONG><a name="[5cf]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5d0]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5d1]"></a>TIM_RemapConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>DMA_DeInit</STRONG> (Thumb, 278 bytes, Stack size 28 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Ch1_WaveConfig
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Open
</UL>

<P><STRONG><a name="[158]"></a>DMA_Init</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Ch1_WaveConfig
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Open
</UL>

<P><STRONG><a name="[5d2]"></a>DMA_StructInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Ch1_WaveConfig
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Close
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Open
</UL>

<P><STRONG><a name="[5d3]"></a>DMA_PeriphIncOffsetSizeConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5d4]"></a>DMA_FlowControllerConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5d5]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5d6]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5d7]"></a>DMA_DoubleBufferModeConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5d8]"></a>DMA_DoubleBufferModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5d9]"></a>DMA_MemoryTargetConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5da]"></a>DMA_GetCurrentMemoryTarget</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5db]"></a>DMA_GetCmdStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5dc]"></a>DMA_GetFIFOStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5dd]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5de]"></a>DMA_ClearFlag</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5df]"></a>DMA_ITConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5e0]"></a>DMA_GetITStatus</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[5e1]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>ADC_DeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[15b]"></a>ADC_Init</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
</UL>

<P><STRONG><a name="[5e2]"></a>ADC_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>ADC_CommonInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_CommonInit
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
</UL>

<P><STRONG><a name="[5e3]"></a>ADC_CommonStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>ADC_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Close
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Open
</UL>

<P><STRONG><a name="[160]"></a>ADC_AnalogWatchdogCmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
</UL>

<P><STRONG><a name="[15e]"></a>ADC_AnalogWatchdogThresholdsConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
</UL>

<P><STRONG><a name="[15f]"></a>ADC_AnalogWatchdogSingleChannelConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
</UL>

<P><STRONG><a name="[5e4]"></a>ADC_TempSensorVrefintCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5e5]"></a>ADC_VBATCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[15c]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Open
</UL>

<P><STRONG><a name="[5e6]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5e7]"></a>ADC_GetSoftwareStartConvStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5e8]"></a>ADC_EOCOnEachRegularChannelCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5e9]"></a>ADC_ContinuousModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5ea]"></a>ADC_DiscModeChannelCountConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5eb]"></a>ADC_DiscModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5ec]"></a>ADC_GetConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5ed]"></a>ADC_GetMultiModeConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>ADC_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
</UL>

<P><STRONG><a name="[162]"></a>ADC_DMARequestAfterLastTransferCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
</UL>

<P><STRONG><a name="[5ee]"></a>ADC_MultiModeDMARequestAfterLastTransferCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5ef]"></a>ADC_InjectedChannelConfig</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f0]"></a>ADC_InjectedSequencerLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f1]"></a>ADC_SetInjectedOffset</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f2]"></a>ADC_ExternalTrigInjectedConvConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f3]"></a>ADC_ExternalTrigInjectedConvEdgeConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f4]"></a>ADC_SoftwareStartInjectedConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f5]"></a>ADC_GetSoftwareStartInjectedConvCmdStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f6]"></a>ADC_AutoInjectedConvCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f7]"></a>ADC_InjectedDiscModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5f8]"></a>ADC_GetInjectedConversionValue</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>ADC_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
</UL>

<P><STRONG><a name="[5f9]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5fa]"></a>ADC_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5fb]"></a>ADC_GetITStatus</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[5fc]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>DAC_DeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_dac.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[16e]"></a>DAC_Init</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, stm32f4xx_dac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DAC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Ch1_WaveConfig
</UL>

<P><STRONG><a name="[5fd]"></a>DAC_StructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[16f]"></a>DAC_Cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Ch1_WaveConfig
</UL>

<P><STRONG><a name="[5fe]"></a>DAC_SoftwareTriggerCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[5ff]"></a>DAC_DualSoftwareTriggerCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[600]"></a>DAC_WaveGenerationCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>DAC_SetChannel1Data</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_dac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DAC_SetChannel1Data
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[601]"></a>DAC_SetChannel2Data</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[602]"></a>DAC_SetDualChannelData</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[603]"></a>DAC_GetDataOutputValue</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[170]"></a>DAC_DMACmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Ch1_WaveConfig
</UL>

<P><STRONG><a name="[604]"></a>DAC_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[605]"></a>DAC_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[606]"></a>DAC_ClearFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[607]"></a>DAC_GetITStatus</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[608]"></a>DAC_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_dac.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>SystemInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(.text)
</UL>
<P><STRONG><a name="[609]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text), UNUSED)

<P><STRONG><a name="[27f]"></a>LCD_Color2Index_M565</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcdpm565.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_Color2Index
</UL>

<P><STRONG><a name="[280]"></a>LCD_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdpm565.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_GetIndexMask
</UL>

<P><STRONG><a name="[18b]"></a>GUI__CalcTextRect</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, gui__calctextrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[435]"></a>GUI__DivideRound</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui__divideround.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[18e]"></a>GUI__GetCursorPosX</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, gui__getcursorpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetCursorPosX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[191]"></a>GUI__GetCursorPosChar</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gui__getcursorpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__GetCursorPosChar &rArr; GUI_UC__NumBytes2NumChars
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>

<P><STRONG><a name="[195]"></a>GUI__GetCursorCharacter</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui__getcursorpos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1ff]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui__getfontsizey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[196]"></a>GUI__GetNumChars</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui__getnumchars.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1bb]"></a>GUI__HandleEOLine</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__handleeoline.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[3d1]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__intersectrect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[1be]"></a>GUI__IntersectRects</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gui__intersectrects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>

<P><STRONG><a name="[1b0]"></a>GUI__memset</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, gui__memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>

<P><STRONG><a name="[29c]"></a>GUI__memset16</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui__memset16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[1cc]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__reducerect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextItem
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_GetRect
</UL>

<P><STRONG><a name="[197]"></a>GUI__SetText</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gui__settext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
</UL>

<P><STRONG><a name="[1a0]"></a>GUI__strcmp</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gui__strcmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[198]"></a>GUI__strcmp_hp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui__strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__strcmp_hp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[199]"></a>GUI__strlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui__strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
</UL>

<P><STRONG><a name="[1a7]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui__wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; _WrapGetNumCharsDisp &rArr; _GetWordWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[1a8]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, gui__wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; _GetWordWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[1aa]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui__wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; _GetWordWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[1ab]"></a>GUI_AddDecMin</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_adddecmin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
</UL>

<P><STRONG><a name="[1ac]"></a>GUI_Long2Len</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_adddecshift.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSFloatMin
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloat
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
</UL>

<P><STRONG><a name="[26b]"></a>GUI_AddSign</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_adddecshift.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_AddSign
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
</UL>

<P><STRONG><a name="[1ad]"></a>GUI_AddDecShift</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gui_adddecshift.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_AddDecShift &rArr; _Check_NegLong
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Check_NegLong
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
</UL>

<P><STRONG><a name="[1af]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_alloc_allocinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[1b1]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_alloc_alloczero.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
</UL>

<P><STRONG><a name="[1b2]"></a>GUI_ClearRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_clearrectex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[1b4]"></a>GUI_DispString</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, gui_dispstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>

<P><STRONG><a name="[1b8]"></a>GUI_DispStringAt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_dispstringat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnRadioValueChanged
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UserDraw
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextItem
</UL>

<P><STRONG><a name="[1b9]"></a>GUI__DispStringInRect</STRONG> (Thumb, 318 bytes, Stack size 72 bytes, gui_dispstringinrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[1bc]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gui_dispstringinrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>

<P><STRONG><a name="[1bf]"></a>GUI_DispStringInRect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_dispstringinrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[1c0]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, gui_dispstringinrectwrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1c2]"></a>GL_DrawBitmap</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, gui_drawbitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[1c6]"></a>GUI_DrawBitmap</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_drawbitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[1cb]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gui_drawfocusrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocusRect
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[1ce]"></a>GUI_DrawGraphEx</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, gui_drawgraphex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_DrawGraphEx &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraph
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[1cf]"></a>GUI_DrawHLine</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gui_drawhline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangleDown
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDownRect
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
</UL>

<P><STRONG><a name="[1d1]"></a>GUI_sin</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gui_drawline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcOrto
</UL>

<P><STRONG><a name="[1d0]"></a>GUI_cos</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_drawline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_cos &rArr; GUI_sin
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcOrto
</UL>

<P><STRONG><a name="[1d7]"></a>GL_DrawLine1Ex</STRONG> (Thumb, 416 bytes, Stack size 56 bytes, gui_drawline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Abs
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapInt
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1
</UL>

<P><STRONG><a name="[1db]"></a>GL_DrawLine1</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_drawline.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawEllipse
</UL>

<P><STRONG><a name="[1dc]"></a>GL_DrawLineEx</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, gui_drawline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcOrto
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineToEx
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[1de]"></a>GL_DrawLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_drawline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[1df]"></a>GUI_DrawLine</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gui_drawline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
</UL>

<P><STRONG><a name="[1e0]"></a>GUI_DrawLineRel</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_drawline.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRel
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[1e2]"></a>GL_DrawLineToEx</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, gui_drawline.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineTo
</UL>

<P><STRONG><a name="[1e3]"></a>GL_DrawLineTo</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_drawline.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineToEx
</UL>

<P><STRONG><a name="[1e4]"></a>GUI_DrawLineTo</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_drawline.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_MoveTo
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[1d6]"></a>GL_DrawPoint</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_drawpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GL_DrawPoint &rArr; GL_FillCircle &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>

<P><STRONG><a name="[1e7]"></a>GUI_DrawPoint</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_drawpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[1e8]"></a>GUI_DrawVLine</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gui_drawvline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextItem
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDownRect
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
</UL>

<P><STRONG><a name="[1e9]"></a>GUI_Exec1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_exec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[e3]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_exec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[1dd]"></a>GL_FillPolygon</STRONG> (Thumb, 254 bytes, Stack size 48 bytes, gui_fillpolygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GL_FillPolygon &rArr; _Flush &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevPointDiffy
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPoint
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Flush
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckYInterSect
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[1f2]"></a>GUI_FillPolygon</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[1f3]"></a>GUI_FillRect</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gui_fillrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1f5]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_fillrectex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
</UL>

<P><STRONG><a name="[25d]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, gui_getbitmappixelindex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[1ba]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getclientrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1f7]"></a>GUI_GetBkColorIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_getcolor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>

<P><STRONG><a name="[1f9]"></a>GUI_GetBkColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[1fb]"></a>GUI_GetColorIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_getcolor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>

<P><STRONG><a name="[1fd]"></a>GUI_GetColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[415]"></a>GUI_GetFontInfo</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_getfontinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[1fe]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_getfontsizey.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
</UL>

<P><STRONG><a name="[378]"></a>GUI_GetLineStyle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_getlinestyle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
</UL>

<P><STRONG><a name="[18c]"></a>GUI_GetStringDistX</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_getstringdistx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPageSizeX
</UL>

<P><STRONG><a name="[33e]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getysizeoffont.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcBorderRect
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClientRect
</UL>

<P><STRONG><a name="[2f3]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getysizeoffont.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[200]"></a>GUI_GotoY</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_goto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
</UL>

<P><STRONG><a name="[202]"></a>GUI_GotoX</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_goto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
</UL>

<P><STRONG><a name="[204]"></a>GUI_GotoXY</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_goto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GotoXY
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
</UL>

<P><STRONG><a name="[205]"></a>GUI_InvertRect</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, gui_invertrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_InvertRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[478]"></a>GUI_MergeRect</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, gui_mergerect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
</UL>

<P><STRONG><a name="[2ab]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_moverect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[207]"></a>GUI_GetKey</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_onkey.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearKeyBuffer
</UL>

<P><STRONG><a name="[20a]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[206]"></a>GUI_ClearKeyBuffer</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, gui_onkey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetKey
</UL>

<P><STRONG><a name="[20c]"></a>GUI_StoreKeyMsg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_onkey.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
</UL>

<P><STRONG><a name="[208]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_onkey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[20b]"></a>GUI_SendKeyMsg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gui_onkey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
</UL>

<P><STRONG><a name="[60a]"></a>GUI_GetPenSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_pen.o(.text), UNUSED)

<P><STRONG><a name="[60b]"></a>GUI_GetPenShape</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_pen.o(.text), UNUSED)

<P><STRONG><a name="[21b]"></a>GUI_SetPenSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_pen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[60c]"></a>GUI_SetPenShape</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_pen.o(.text), UNUSED)

<P><STRONG><a name="[4ca]"></a>GUI_PID_GetState</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_pid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[20d]"></a>GUI_PID_StoreState</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_PID_StoreState &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PID_Load
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[248]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_rectsintersect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TempHide
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>

<P><STRONG><a name="[210]"></a>GUI_SaveContext_W_M</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_savecontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W_M &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[211]"></a>GUI_RestoreContext</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_savecontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[212]"></a>GUI_SelectLCD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_selectlcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_SelectLCD &rArr; LCD_UpdateColorIndices &rArr; LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[1c1]"></a>GUI_SetClipRect</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcliprect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_SetClipRect &rArr; WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[216]"></a>GUI_SetBkColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SetBkColor &rArr; LCD_SetBkColor &rArr; LCD_SetBkColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[218]"></a>GUI_SetColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SetColor &rArr; LCD_SetColor &rArr; LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UserDraw
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
</UL>

<P><STRONG><a name="[21a]"></a>GL_SetDefault</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gui_setdefault.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GL_SetDefault &rArr; GUI_SetColor &rArr; LCD_SetColor &rArr; LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[220]"></a>GUI_SetDefault</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_setdefault.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[1c3]"></a>GUI_SetDrawMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setdrawmode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SetDrawMode &rArr; LCD_SetDrawMode
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[21e]"></a>GUI_SetFont</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setfont.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UserDraw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPageSizeX
</UL>

<P><STRONG><a name="[21f]"></a>GUI_SetLineStyle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_setlinestyle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
</UL>

<P><STRONG><a name="[21c]"></a>GUI_SetTextAlign</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_settextalign.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
</UL>

<P><STRONG><a name="[21d]"></a>GUI_SetTextMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_settextmode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[60d]"></a>GUI_TOUCH_GetState</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_touch.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>GUI_TOUCH_StoreStateEx</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>

<P><STRONG><a name="[60e]"></a>GUI_TOUCH_GetxPhys</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(.text), UNUSED)

<P><STRONG><a name="[60f]"></a>GUI_TOUCH_GetyPhys</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(.text), UNUSED)

<P><STRONG><a name="[610]"></a>GUI_TOUCH_SetDefaultCalibration</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>GUI_TOUCH_Calibrate</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, gui_touch_driveranalog.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2Phys
</UL>

<P><STRONG><a name="[611]"></a>GUI_TOUCH_GetCalData</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_touch_driveranalog.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>GUI_TOUCH_Exec</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gui_touch_driveranalog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_TOUCH_Exec &rArr; GUI_TOUCH_X_MeasureY &rArr; ADS_Read_AD &rArr; ADS_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateY
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateX
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreUnstable
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AD2Y
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AD2X
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[22d]"></a>GUI_TOUCH_StoreState</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_touch_storestate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreUnstable
</UL>

<P><STRONG><a name="[224]"></a>GUI_TOUCH_StoreUnstable</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_touch_storeunstable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_TOUCH_StoreUnstable &rArr; GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreUnstable
</UL>

<P><STRONG><a name="[612]"></a>GUI_TOUCH_GetUnstable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_touch_storeunstable.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>

<P><STRONG><a name="[192]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorCharacter
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
</UL>

<P><STRONG><a name="[31d]"></a>GUI_UC_Encode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[31c]"></a>GUI_UC__CalcSizeOfChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[18f]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[1a9]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>

<P><STRONG><a name="[194]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gui_uc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumBytes2NumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
</UL>

<P><STRONG><a name="[613]"></a>GUI_UC_SetEncodeNone</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc_encodenone.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>GUI_WaitEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_waitevent.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[1e1]"></a>GUI_MoveRel</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
</UL>

<P><STRONG><a name="[1e5]"></a>GL_MoveTo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveTo
</UL>

<P><STRONG><a name="[230]"></a>GUI_MoveTo</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_MoveTo
</UL>

<P><STRONG><a name="[232]"></a>GUI_DrawRect</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui2dlib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
</UL>

<P><STRONG><a name="[236]"></a>GUI_ALLOC_Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
</UL>

<P><STRONG><a name="[237]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_ALLOC_GetMaxSize
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumFreeBytes
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[19d]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[19b]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetState
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextColor
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__GetIndexMask
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Index2Color
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Color2Index
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__GetRect
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MaximizeFramewin
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButton
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetFont
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Minimize
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMin
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Restore
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Maximize
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMax
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetStayOnTop
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSpacing
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetFont
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendToOwner
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SethItem
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetNumDecs
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetFactor
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetTextColor
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetFont
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetTickDist
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_SetAlign
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_SetOffY
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetLineStyleV
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetLineStyleH
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridFixedX
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetVSizeY
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetVSizeX
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetUserDraw
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColorEx
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetBkColor
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetWidth
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateEx
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetGroupId
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearSelection
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_IsPageEnabled
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_GetWindow
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_GetSelection
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetAlign
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetFont
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetTextColor
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetBkColor
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetText
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_EnablePage
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DisablePage
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DeletePage
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_AddPage
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_CreateEx
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SelectPage
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientCallback
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowPage
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransTopSiblings
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddToLinList
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetState
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateChildPostions
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetStayOnTop
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[23d]"></a>GUI_ALLOC_GetNumFreeBytes</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guialloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
</UL>

<P><STRONG><a name="[23e]"></a>GUI_ALLOC_GetNumFreeBlocks</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guialloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
</UL>

<P><STRONG><a name="[23f]"></a>GUI_ALLOC_GetNumUsedBytes</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guialloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
</UL>

<P><STRONG><a name="[240]"></a>GUI_ALLOC_GetNumUsedBlocks</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guialloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
</UL>

<P><STRONG><a name="[614]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guialloc.o(.text), UNUSED)

<P><STRONG><a name="[615]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guialloc.o(.text), UNUSED)

<P><STRONG><a name="[19a]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
</UL>

<P><STRONG><a name="[242]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
</UL>

<P><STRONG><a name="[19f]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SethItem
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>

<P><STRONG><a name="[244]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI_ALLOC_FreePtrArray &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
</UL>

<P><STRONG><a name="[18d]"></a>GUI_GetFontDistY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guichar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[245]"></a>GUI_DispNextLine</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, guichar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_DispNextLine
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>

<P><STRONG><a name="[246]"></a>GL_DispChar</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, guichar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GL_DispChar &rArr; GUI_DispNextLine
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine_SJIS
</UL>

<P><STRONG><a name="[1b5]"></a>GUI_GetYAdjust</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, guichar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[190]"></a>GUI_GetCharDistX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guichar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLineDistX_SJIS
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1a2]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, guicharline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNoWrap
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1b6]"></a>GUI__GetLineDistX</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, guicharline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1b7]"></a>GUI__DispLine</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, guicharline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[93]"></a>GUIMONO_DispChar</STRONG> (Thumb, 300 bytes, Stack size 80 bytes, guicharm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guicharm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicharm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guicharm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>GUIPROP_DispChar</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, guicharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUIPROP_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_FindChar
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 4]<UL><LI> f08_1.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> fhzk12gui.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, guicharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_FindChar
</UL>
<BR>[Address Reference Count : 4]<UL><LI> f08_1.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> fhzk12gui.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicharp.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> f08_1.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> fhzk12gui.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guicharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_FindChar
</UL>
<BR>[Address Reference Count : 4]<UL><LI> f08_1.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> fhzk12gui.o(.constdata)
</UL>
<P><STRONG><a name="[24b]"></a>GL_DrawCircle</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[24c]"></a>GUI_DrawCircle</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
</UL>

<P><STRONG><a name="[1e6]"></a>GL_FillCircle</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, guicirc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GL_FillCircle &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
</UL>

<P><STRONG><a name="[24d]"></a>GUI_FillCircle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>

<P><STRONG><a name="[24e]"></a>GL_FillEllipse</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
</UL>

<P><STRONG><a name="[24f]"></a>GUI_FillEllipse</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipse
</UL>

<P><STRONG><a name="[250]"></a>GL_DrawEllipse</STRONG> (Thumb, 166 bytes, Stack size 64 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
</UL>

<P><STRONG><a name="[251]"></a>GUI_DrawEllipse</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawEllipse
</UL>

<P><STRONG><a name="[1b3]"></a>GUI_ClearRect</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, guicore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
</UL>

<P><STRONG><a name="[de]"></a>GUI_Clear</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guicore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientCallback
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[dd]"></a>GUI_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[260]"></a>GUI_CURSOR_Activate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guicurs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[261]"></a>GUI_CURSOR_Deactivate</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guicurs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Hide
</UL>

<P><STRONG><a name="[262]"></a>GUI_CURSOR_Select</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, guicurs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Hide
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcRect
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
</UL>

<P><STRONG><a name="[264]"></a>GUI_CURSOR_Hide</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guicurs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Hide
</UL>

<P><STRONG><a name="[265]"></a>GUI_CURSOR_Show</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, guicurs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Hide
</UL>

<P><STRONG><a name="[616]"></a>GUI_CURSOR_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicurs.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>GUI_CURSOR_SetPosition</STRONG> (Thumb, 530 bytes, Stack size 104 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_CURSOR_SetPosition &rArr; _CalcRect
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcRect
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2Phys
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[268]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, guirealloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[269]"></a>GUI_DispDecShift</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, guival.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDec
</UL>

<P><STRONG><a name="[26a]"></a>GUI_DispSDecShift</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, guival.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDec
</UL>

<P><STRONG><a name="[26c]"></a>GUI_DispDecMin</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, guival.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[26d]"></a>GUI_DispDecSpace</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, guival.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[26e]"></a>GUI_DispSDec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guival.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
</UL>

<P><STRONG><a name="[26f]"></a>GUI_DispDec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guival.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>

<P><STRONG><a name="[13d]"></a>GUI_DispDecAt</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, guival.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderValueChanged
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UserDraw
</UL>

<P><STRONG><a name="[273]"></a>GUI_DispFloatFix</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guivalf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[274]"></a>GUI_DispFloatMin</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, guivalf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
</UL>

<P><STRONG><a name="[275]"></a>GUI_DispFloat</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guivalf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[276]"></a>GUI_DispSFloatFix</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guivalf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[277]"></a>GUI_DispSFloatMin</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, guivalf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[278]"></a>LCD_SetColorIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[27a]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetBkColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[221]"></a>LCD_SetDrawMode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[1ca]"></a>LCD_DrawPixel</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocusRect
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw8Point
</UL>

<P><STRONG><a name="[fd]"></a>LCD_DrawHLine</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAdjustPoint
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPoint
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Flush
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipse
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMin
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMax
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[1f4]"></a>LCD_FillRect</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[1c5]"></a>LCD_DrawBitmap</STRONG> (Thumb, 490 bytes, Stack size 64 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>

<P><STRONG><a name="[27b]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[255]"></a>LCD_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LCD_Init &rArr; LCD_L0_Init &rArr; TFTLCD_Init &rArr; LCD_FSMC_Config &rArr; LCD_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_On
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_Init
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[25b]"></a>LCD_Color2Index</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2Phys
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>

<P><STRONG><a name="[1fa]"></a>LCD_Index2Color</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[217]"></a>LCD_SetBkColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetBkColor &rArr; LCD_SetBkColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientCallback
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextItem
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[219]"></a>LCD_SetColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetColor &rArr; LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextItem
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDownRect
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
</UL>

<P><STRONG><a name="[fe]"></a>LCD_DrawVLine</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd_drawvline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAdjustPoint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraph
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMax
</UL>

<P><STRONG><a name="[1f8]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getcolorindex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColorIndex
</UL>

<P><STRONG><a name="[1fc]"></a>LCD_GetColorIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getcolorindex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColorIndex
</UL>

<P><STRONG><a name="[617]"></a>LCD_L0_GetpfIndex2Color</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_l0_generic.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>LCD_L0_Color2Index</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_l0_generic.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>LCD_L0_Index2Color</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_l0_generic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_L0_Index2Color &rArr; LCD_Index2Color_M565
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>LCD_L0_GetIndexMask</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_l0_generic.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetIndexMask_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>LCD_L0_GetRect</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd_l0_generic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[213]"></a>LCD_SelectLCD</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd_selectlcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[281]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lcd_setcliprectex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[214]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_UpdateColorIndices &rArr; LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[282]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lcdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[1c4]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>

<P><STRONG><a name="[27d]"></a>LCD_InitLUT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcdcolor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[29e]"></a>LCD_GetXSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MaximizeFramewin
</UL>

<P><STRONG><a name="[2a0]"></a>LCD_GetYSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MaximizeFramewin
</UL>

<P><STRONG><a name="[618]"></a>LCD_GetVXSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[619]"></a>LCD_GetVYSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[61a]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[28c]"></a>LCD_GetNumColors</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[61b]"></a>LCD_GetYMag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[61c]"></a>LCD_GetXMag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[61d]"></a>LCD_GetFixedPalette</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lcdpm565_index2color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_Index2Color
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_l0_generic.o(.text)
</UL>
<P><STRONG><a name="[61e]"></a>GUI_X_GetTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x.o(.text), UNUSED)

<P><STRONG><a name="[61f]"></a>GUI_X_Delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_x.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>GUI_X_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[22f]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[620]"></a>GUI_X_Log</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(.text), UNUSED)

<P><STRONG><a name="[621]"></a>GUI_X_Warn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(.text), UNUSED)

<P><STRONG><a name="[622]"></a>GUI_X_ErrorOut</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(.text), UNUSED)

<P><STRONG><a name="[228]"></a>GUI_TOUCH_X_ActivateX</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[22a]"></a>GUI_TOUCH_X_ActivateY</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[227]"></a>GUI_TOUCH_X_MeasureX</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_x_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_TOUCH_X_MeasureX &rArr; ADS_Read_AD &rArr; ADS_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read_AD
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[229]"></a>GUI_TOUCH_X_MeasureY</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_x_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_TOUCH_X_MeasureY &rArr; ADS_Read_AD &rArr; ADS_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read_AD
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[8f]"></a>LCD_L0_SetPixelIndex</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_XorPixel
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBitLine16BPP
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>LCD_L0_GetPixelIndex</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_L0_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_XorPixel
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>LCD_L0_XorPixel</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_L0_XorPixel &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_GetPixelIndex
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawVLine
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>LCD_L0_DrawHLine</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_L0_DrawHLine &rArr; LCD_L0_XorPixel &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>LCD_L0_DrawVLine</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_L0_DrawVLine &rArr; LCD_L0_XorPixel &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>LCD_L0_FillRect</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_L0_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>LCD_L0_DrawBitmap</STRONG> (Thumb, 146 bytes, Stack size 64 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LCD_L0_DrawBitmap &rArr; _DrawBitLine4BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBitLine16BPP
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[623]"></a>LCD_L0_SetOrg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcdtemplate.o(.text), UNUSED)

<P><STRONG><a name="[27e]"></a>LCD_L0_On</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcdtemplate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[624]"></a>LCD_L0_Off</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcdtemplate.o(.text), UNUSED)

<P><STRONG><a name="[27c]"></a>LCD_L0_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LCD_L0_Init &rArr; TFTLCD_Init &rArr; LCD_FSMC_Config &rArr; LCD_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[91]"></a>LCD_L0_SetLUTEntry</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcdtemplate.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>LCD_L0_GetDevFunc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdtemplate.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>GUI_MEMDEV__GetRect</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEMDEV__GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>GUI_MEMDEV__Color2Index</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEMDEV__Color2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>GUI_MEMDEV__Index2Color</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEMDEV__Index2Color
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>GUI_MEMDEV__GetIndexMask</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEMDEV__GetIndexMask
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[288]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices &rArr; LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[28a]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[28d]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
</UL>

<P><STRONG><a name="[28e]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, guidev.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[28f]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices &rArr; LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[291]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 266 bytes, Stack size 88 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[292]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveAt &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[293]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveAt &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[29d]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, guidev_banding.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[2a4]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guidev_clear.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEMDEV_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2a1]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guidev_getysize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEMDEV_GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2a2]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guidev_reduceysize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEMDEV_ReduceYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2a3]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guidev_setorg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_SetOrg
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2a5]"></a>GUI_USAGE_Select</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidev_usage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[289]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guidev_usage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[297]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, guidev_usage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[28b]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[2b3]"></a>BUTTON_Callback</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = BUTTON_Callback &rArr; _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMax
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.text)
</UL>
<P><STRONG><a name="[2b6]"></a>BUTTON_CreateEx</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = BUTTON_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Create
</UL>

<P><STRONG><a name="[2b9]"></a>BUTTON_SetText</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BUTTON_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonChange
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
</UL>

<P><STRONG><a name="[2bb]"></a>BUTTON_SetFont</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BUTTON_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[2bc]"></a>BUTTON_SetBkColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BUTTON_SetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonChange
</UL>

<P><STRONG><a name="[2bd]"></a>BUTTON_SetTextColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BUTTON_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[2be]"></a>BUTTON_SetState</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
</UL>

<P><STRONG><a name="[2c0]"></a>BUTTON_SetPressed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>

<P><STRONG><a name="[2c1]"></a>BUTTON_SetFocussable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BUTTON_SetFocussable &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[2c2]"></a>BUTTON__SetDrawObj</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, button__setbitmapobj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>

<P><STRONG><a name="[2c3]"></a>BUTTON_Create</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, button_create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>

<P><STRONG><a name="[2c4]"></a>BUTTON_CreateAsChild</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, button_create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = BUTTON_CreateAsChild &rArr; BUTTON_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[b4]"></a>BUTTON_CreateIndirect</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, button_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = BUTTON_CreateIndirect &rArr; BUTTON_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scope.o(.constdata)
<LI> scop_menu.o(.constdata)
</UL>
<P><STRONG><a name="[2c5]"></a>BUTTON_SetSelfDrawEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, button_selfdraw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = BUTTON_SetSelfDrawEx &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
</UL>

<P><STRONG><a name="[2c7]"></a>BUTTON_SetSelfDraw</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, button_selfdraw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BUTTON_SetSelfDraw &rArr; BUTTON_SetSelfDrawEx &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMinButton
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMaxButton
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[2d2]"></a>CHECKBOX_Callback</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = CHECKBOX_Callback &rArr; _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.text)
</UL>
<P><STRONG><a name="[2d3]"></a>CHECKBOX_CreateEx</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = CHECKBOX_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateIndirect
</UL>

<P><STRONG><a name="[bb]"></a>CHECKBOX_CreateIndirect</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, checkbox_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = CHECKBOX_CreateIndirect &rArr; CHECKBOX_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scop_menu.o(.constdata)
</UL>
<P><STRONG><a name="[2d5]"></a>CHECKBOX_GetState</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, checkbox_getstate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CHECKBOX_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_IsChecked
</UL>

<P><STRONG><a name="[2d6]"></a>CHECKBOX_IsChecked</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, checkbox_ischecked.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CHECKBOX_IsChecked &rArr; CHECKBOX_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
</UL>

<P><STRONG><a name="[2cf]"></a>CHECKBOX_SetState</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, checkbox_setstate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = CHECKBOX_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2d7]"></a>CHECKBOX_SetText</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, checkbox_settext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = CHECKBOX_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
</UL>

<P><STRONG><a name="[469]"></a>DIALOG_GetBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dialog.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
</UL>

<P><STRONG><a name="[625]"></a>DIALOG_SetBkColor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dialog.o(.text), UNUSED)

<P><STRONG><a name="[2d8]"></a>GUI_SetDialogStatusPtr</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dialog.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[2da]"></a>GUI_GetDialogStatusPtr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>

<P><STRONG><a name="[2db]"></a>GUI_CreateDialogBox</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, dialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveTaskCreat
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecDialogBox
</UL>

<P><STRONG><a name="[2e1]"></a>GUI_EndDialog</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, dialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_EndDialog &rArr; WM_DeleteWindow &rArr; WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback
</UL>

<P><STRONG><a name="[2e2]"></a>GUI_ExecCreatedDialog</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dialog.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecDialogBox
</UL>

<P><STRONG><a name="[2e3]"></a>GUI_ExecDialogBox</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, dialog.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[2e9]"></a>DROPDOWN__GetNumItems</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dropdown.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[2e8]"></a>DROPDOWN_SetSel</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[2f2]"></a>DROPDOWN__AdjustHeight</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DROPDOWN__AdjustHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
</UL>

<P><STRONG><a name="[2f6]"></a>DROPDOWN_GetSel</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DROPDOWN_GetSel
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3WAVEDownChange
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
</UL>

<P><STRONG><a name="[2f7]"></a>DROPDOWN_DecSel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DROPDOWN_DecSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[2f8]"></a>DROPDOWN_IncSel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DROPDOWN_IncSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[2f9]"></a>DROPDOWN_AddKey</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DROPDOWN_AddKey &rArr; _SelectByKey &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[2fa]"></a>DROPDOWN_Expand</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[309]"></a>DROPDOWN_Collapse</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DROPDOWN_Collapse &rArr; WM_DeleteWindow &rArr; WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[30a]"></a>DROPDOWN_Callback</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = DROPDOWN_Callback &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown.o(.text)
</UL>
<P><STRONG><a name="[30d]"></a>DROPDOWN_CreateEx</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = DROPDOWN_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateIndirect
</UL>

<P><STRONG><a name="[30e]"></a>DROPDOWN_AddString</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dropdown_addstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DROPDOWN_AddString &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
</UL>

<P><STRONG><a name="[ba]"></a>DROPDOWN_CreateIndirect</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, dropdown_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = DROPDOWN_CreateIndirect &rArr; DROPDOWN_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scop_menu.o(.constdata)
</UL>
<P><STRONG><a name="[311]"></a>DROPDOWN_SetAutoScroll</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, dropdown_setautoscroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = DROPDOWN_SetAutoScroll &rArr; LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
</UL>

<P><STRONG><a name="[312]"></a>DROPDOWN_SetFont</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, dropdown_setfont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = DROPDOWN_SetFont &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
</UL>

<P><STRONG><a name="[31e]"></a>EDIT__SetCursorPos</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>

<P><STRONG><a name="[31f]"></a>EDIT_SetCursorAtPixel</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EDIT_SetCursorAtPixel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[323]"></a>EDIT__GetCurrentChar</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EDIT__GetCurrentChar &rArr; GUI_UC__NumChars2NumBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
</UL>

<P><STRONG><a name="[324]"></a>EDIT__SetValueUnsigned</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>

<P><STRONG><a name="[325]"></a>EDIT_AddKey</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDIT_AddKey &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[326]"></a>EDIT_Callback</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = EDIT_Callback &rArr; _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(.text)
</UL>
<P><STRONG><a name="[327]"></a>EDIT_CreateEx</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = EDIT_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateIndirect
</UL>

<P><STRONG><a name="[328]"></a>EDIT_SetFont</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[329]"></a>EDIT_SetBkColor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[32a]"></a>EDIT_SetTextColor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[32b]"></a>EDIT_SetText</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[32c]"></a>EDIT_GetText</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[32d]"></a>EDIT_GetValue</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[32e]"></a>EDIT_SetValue</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3ButtonChange
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPosition
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNegative
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakePositive
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
</UL>

<P><STRONG><a name="[32f]"></a>EDIT_SetMaxLen</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
</UL>

<P><STRONG><a name="[330]"></a>EDIT_SetTextAlign</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EDIT_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateIndirect
</UL>

<P><STRONG><a name="[bc]"></a>EDIT_CreateIndirect</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, edit_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EDIT_CreateIndirect &rArr; EDIT_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scop_menu.o(.constdata)
</UL>
<P><STRONG><a name="[338]"></a>EDIT_SetDecMode</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, editdec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EDIT_SetDecMode &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
</UL>

<P><STRONG><a name="[33d]"></a>FRAMEWIN__CalcTitleHeight</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MinimizeFramewin
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
</UL>

<P><STRONG><a name="[33f]"></a>FRAMEWIN__CalcPositions</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FRAMEWIN__CalcPositions &rArr; WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[348]"></a>FRAMEWIN__UpdatePositions</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MaximizeFramewin
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MinimizeFramewin
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMaximized
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMinimized
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
</UL>

<P><STRONG><a name="[34a]"></a>FRAMEWIN_SetActive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = FRAMEWIN_SetActive &rArr; _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[34b]"></a>FRAMEWIN_Callback</STRONG> (Thumb, 328 bytes, Stack size 56 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = FRAMEWIN_Callback &rArr; _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(.text)
</UL>
<P><STRONG><a name="[34e]"></a>FRAMEWIN_SetText</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = FRAMEWIN_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
</UL>

<P><STRONG><a name="[34f]"></a>FRAMEWIN_CreateEx</STRONG> (Thumb, 180 bytes, Stack size 72 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = FRAMEWIN_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateIndirect
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateAsChild
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Create
</UL>

<P><STRONG><a name="[351]"></a>FRAMEWIN_SetTextAlign</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = FRAMEWIN_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[352]"></a>FRAMEWIN_SetMoveable</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN_SetMoveable
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
</UL>

<P><STRONG><a name="[353]"></a>FRAMEWIN__UpdateButtons</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, framewin__updatebuttons.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
</UL>

<P><STRONG><a name="[356]"></a>FRAMEWIN_AddButton</STRONG> (Thumb, 110 bytes, Stack size 64 bytes, framewin_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMinButton
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMaxButton
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[35a]"></a>FRAMEWIN_AddCloseButton</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, framewin_buttonclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = FRAMEWIN_AddCloseButton &rArr; FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
</UL>

<P><STRONG><a name="[360]"></a>FRAMEWIN_AddMaxButton</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, framewin_buttonmax.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = FRAMEWIN_AddMaxButton &rArr; FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[364]"></a>FRAMEWIN_AddMinButton</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, framewin_buttonmin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = FRAMEWIN_AddMinButton &rArr; FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[365]"></a>FRAMEWIN_Create</STRONG> (Thumb, 42 bytes, Stack size 48 bytes, framewin_create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = FRAMEWIN_Create &rArr; FRAMEWIN_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
</UL>

<P><STRONG><a name="[366]"></a>FRAMEWIN_CreateAsChild</STRONG> (Thumb, 32 bytes, Stack size 48 bytes, framewin_create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
</UL>

<P><STRONG><a name="[b3]"></a>FRAMEWIN_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, framewin_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = FRAMEWIN_CreateIndirect &rArr; FRAMEWIN_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scope.o(.constdata)
</UL>
<P><STRONG><a name="[367]"></a>FRAMEWIN_GetFont</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, framewin_get.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[357]"></a>FRAMEWIN_GetTitleHeight</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, framewin_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FRAMEWIN_GetTitleHeight &rArr; FRAMEWIN__CalcPositions &rArr; WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[358]"></a>FRAMEWIN_GetBorderSize</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, framewin_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN_GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[361]"></a>FRAMEWIN_Minimize</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, framewin_minmaxrest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = FRAMEWIN_Minimize &rArr; _MinimizeFramewin &rArr; _RestoreMaximized &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MinimizeFramewin
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMin
</UL>

<P><STRONG><a name="[35d]"></a>FRAMEWIN_Maximize</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, framewin_minmaxrest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = FRAMEWIN_Maximize &rArr; _MaximizeFramewin &rArr; _RestoreMinimized &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MaximizeFramewin
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMax
</UL>

<P><STRONG><a name="[35c]"></a>FRAMEWIN_Restore</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, framewin_minmaxrest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = FRAMEWIN_Restore &rArr; _RestoreMaximized &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMaximized
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMinimized
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMax
</UL>

<P><STRONG><a name="[370]"></a>FRAMEWIN_SetBarColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, framewin_setcolors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = FRAMEWIN_SetBarColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
</UL>

<P><STRONG><a name="[371]"></a>FRAMEWIN_SetTextColor</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, framewin_setcolors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = FRAMEWIN_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[372]"></a>FRAMEWIN_SetTextColorEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, framewin_setcolors.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[373]"></a>FRAMEWIN_SetClientColor</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, framewin_setcolors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = FRAMEWIN_SetClientColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[374]"></a>FRAMEWIN_SetFont</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, framewin_setfont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = FRAMEWIN_SetFont &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[375]"></a>FRAMEWIN_SetTitleHeight</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, framewin_settitleheight.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = FRAMEWIN_SetTitleHeight &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[389]"></a>GRAPH__AddValue</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GRAPH__AddValue &rArr; _InvalidateGraph &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>

<P><STRONG><a name="[38a]"></a>GRAPH_Callback</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GRAPH_Callback &rArr; _OnPaint &rArr; _DrawBorder &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph.o(.text)
</UL>
<P><STRONG><a name="[38d]"></a>GRAPH_CreateEx</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GRAPH_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateIndirect
</UL>

<P><STRONG><a name="[38e]"></a>GRAPH_AttachData</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GRAPH_AttachData &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[38f]"></a>GRAPH_AttachScale</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GRAPH_AttachScale &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[390]"></a>GRAPH_SetColor</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GRAPH_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[391]"></a>GRAPH_SetGridVis</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GRAPH_SetGridVis &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[392]"></a>GRAPH_SetGridDistX</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GRAPH_SetGridDistX &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[393]"></a>GRAPH_SetGridDistY</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GRAPH_SetGridDistY &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[394]"></a>GRAPH_SetGridOffY</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, graph.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetGridOffY
</UL>

<P><STRONG><a name="[395]"></a>GRAPH_SetBorder</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GRAPH_SetBorder &rArr; _ManageScrollBars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[396]"></a>GRAPH_SetUserDraw</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GRAPH_SetUserDraw &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[397]"></a>GRAPH_SetVSizeX</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GRAPH_SetVSizeX &rArr; _ManageScrollBars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[398]"></a>GRAPH_SetVSizeY</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GRAPH_SetVSizeY &rArr; _ManageScrollBars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[399]"></a>GRAPH_SetGridFixedX</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, graph.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[39a]"></a>GRAPH_SetLineStyleH</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, graph.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetLineStyle
</UL>

<P><STRONG><a name="[39b]"></a>GRAPH_SetLineStyleV</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, graph.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetLineStyle
</UL>

<P><STRONG><a name="[39c]"></a>GRAPH_SetLineStyle</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, graph.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetLineStyleV
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetLineStyleH
</UL>

<P><STRONG><a name="[b7]"></a>GRAPH_CreateIndirect</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, graph_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GRAPH_CreateIndirect &rArr; GRAPH_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scope.o(.constdata)
</UL>
<P><STRONG><a name="[39e]"></a>GRAPH_DATA_YT_Create</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, graph_data_yt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GRAPH_DATA_YT_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[39f]"></a>GRAPH_DATA_YT_AddValue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, graph_data_yt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; _InvalidateGraph &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updata_signal
</UL>

<P><STRONG><a name="[3a0]"></a>GRAPH_DATA_YT_SetOffY</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, graph_data_yt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GRAPH_DATA_YT_SetOffY &rArr; _SetOffY &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOffY
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[3a1]"></a>GRAPH_DATA_YT_SetAlign</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, graph_data_yt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GRAPH_DATA_YT_SetAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[3a4]"></a>GRAPH_SCALE_Create</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, graph_scale.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GRAPH_SCALE_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[3a5]"></a>GRAPH_SCALE_SetOff</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, graph_scale.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GRAPH_SCALE_SetOff &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[3a6]"></a>GRAPH_SCALE_SetTickDist</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, graph_scale.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[3a7]"></a>GRAPH_SCALE_SetFont</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, graph_scale.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[3a8]"></a>GRAPH_SCALE_SetTextColor</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, graph_scale.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GRAPH_SCALE_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[3a9]"></a>GRAPH_SCALE_SetPos</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, graph_scale.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[3aa]"></a>GRAPH_SCALE_SetFactor</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, graph_scale.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GRAPH_SCALE_SetFactor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[3ab]"></a>GRAPH_SCALE_SetNumDecs</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, graph_scale.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[3b9]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_array.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
</UL>

<P><STRONG><a name="[310]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_AddPage
</UL>

<P><STRONG><a name="[2ed]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
</UL>

<P><STRONG><a name="[3ac]"></a>GUI_ARRAY_SethItem</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_array.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[3ad]"></a>GUI_ARRAY_SetItem</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_ARRAY_SetItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetText
</UL>

<P><STRONG><a name="[2e5]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GethItem
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[3ae]"></a>GUI_ARRAY_GetpItem</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY_GetpItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpString
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_GetWindow
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetText
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DeletePage
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_AddPage
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SelectPage
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPageSizeX
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEnable
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetEnable
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowPage
</UL>

<P><STRONG><a name="[3af]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gui_array_deleteitem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DeletePage
</UL>

<P><STRONG><a name="[2aa]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3b0]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[3b1]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[2c6]"></a>GUI_DRAW_SELF_Create</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gui_draw_self.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_DRAW_SELF_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>

<P><STRONG><a name="[3b2]"></a>LISTBOX__GetpString</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LISTBOX__GetpString &rArr; GUI_ARRAY_GetpItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[3b3]"></a>LISTBOX_OwnerDraw</STRONG> (Thumb, 496 bytes, Stack size 56 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpString
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>

<P><STRONG><a name="[3b8]"></a>LISTBOX__GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listbox.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[3c2]"></a>LISTBOX__SetScrollbarColor</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LISTBOX__SetScrollbarColor &rArr; SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[3c5]"></a>LISTBOX__SetScrollbarWidth</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetDefaultWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[3c9]"></a>LISTBOX_UpdateScrollers</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
</UL>

<P><STRONG><a name="[3cc]"></a>LISTBOX__InvalidateItem</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = LISTBOX__InvalidateItem &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[3cd]"></a>LISTBOX__InvalidateInsideArea</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LISTBOX__InvalidateInsideArea &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[308]"></a>LISTBOX_SetSel</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMouseOver
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[30b]"></a>LISTBOX_GetSel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTBOX_GetSel
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[3d7]"></a>LISTBOX_DecSel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = LISTBOX_DecSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3d8]"></a>LISTBOX_IncSel</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3db]"></a>LISTBOX__InvalidateItemSize</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LISTBOX__InvalidateItemSize &rArr; GUI_ARRAY_GetpItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[3dc]"></a>LISTBOX__InvalidateItemAndBelow</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = LISTBOX__InvalidateItemAndBelow &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[3dd]"></a>LISTBOX_AddKey</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[3de]"></a>LISTBOX_Callback</STRONG> (Thumb, 366 bytes, Stack size 40 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = LISTBOX_Callback &rArr; LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMouseOver
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendToOwner
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(.text)
</UL>
<P><STRONG><a name="[3e0]"></a>LISTBOX_InvalidateItem</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[2ff]"></a>LISTBOX_AddString</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[3e1]"></a>LISTBOX_SetText</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>

<P><STRONG><a name="[3e2]"></a>LISTBOX_CreateEx</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Create
</UL>

<P><STRONG><a name="[3e3]"></a>LISTBOX_Create</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, listbox_create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>

<P><STRONG><a name="[2fc]"></a>LISTBOX_CreateAsChild</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, listbox_create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[304]"></a>LISTBOX_SetFont</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listbox_font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = LISTBOX_SetFont &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3e4]"></a>LISTBOX_GetFont</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, listbox_font.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[303]"></a>LISTBOX_SetItemSpacing</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, listbox_itemspacing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = LISTBOX_SetItemSpacing &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3e5]"></a>LISTBOX_GetItemSpacing</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, listbox_itemspacing.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[3e6]"></a>LISTBOX_SetAutoScrollH</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listbox_setautoscroll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[2fe]"></a>LISTBOX_SetAutoScrollV</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listbox_setautoscroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[300]"></a>LISTBOX_SetBkColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listbox_setbkcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LISTBOX_SetBkColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[307]"></a>LISTBOX_SetOwner</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, listbox_setowner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LISTBOX_SetOwner &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[302]"></a>LISTBOX_SetScrollbarColor</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, listbox_setscrollbarcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LISTBOX_SetScrollbarColor &rArr; LISTBOX__SetScrollbarColor &rArr; SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[2fd]"></a>LISTBOX_SetScrollbarWidth</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, listbox_setscrollbarwidth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = LISTBOX_SetScrollbarWidth &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[305]"></a>LISTBOX_SetTextAlign</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, listbox_settextalign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LISTBOX_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[301]"></a>LISTBOX_SetTextColor</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listbox_settextcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[3fd]"></a>MULTIPAGE_SelectPage</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEnable
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowPage
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_AddPage
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClickedOnMultipage
</UL>

<P><STRONG><a name="[405]"></a>MULTIPAGE_CreateEx</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MULTIPAGE_CreateEx &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
</UL>

<P><STRONG><a name="[406]"></a>MULTIPAGE_AddPage</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = MULTIPAGE_AddPage &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SelectPage
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
</UL>

<P><STRONG><a name="[408]"></a>MULTIPAGE_DeletePage</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowPage
</UL>

<P><STRONG><a name="[409]"></a>MULTIPAGE_DisablePage</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetEnable
</UL>

<P><STRONG><a name="[40a]"></a>MULTIPAGE_EnablePage</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetEnable
</UL>

<P><STRONG><a name="[40b]"></a>MULTIPAGE_SetText</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[40c]"></a>MULTIPAGE_SetBkColor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[40d]"></a>MULTIPAGE_SetTextColor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[40e]"></a>MULTIPAGE_SetFont</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
</UL>

<P><STRONG><a name="[40f]"></a>MULTIPAGE_SetAlign</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClientRect
</UL>

<P><STRONG><a name="[410]"></a>MULTIPAGE_GetSelection</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[411]"></a>MULTIPAGE_GetWindow</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>

<P><STRONG><a name="[412]"></a>MULTIPAGE_IsPageEnabled</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEnable
</UL>

<P><STRONG><a name="[416]"></a>RADIO__SetValue</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetGroupId
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandleSetValue
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearSelection
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>

<P><STRONG><a name="[417]"></a>RADIO_SetValue</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[41a]"></a>RADIO_AddValue</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
</UL>

<P><STRONG><a name="[41b]"></a>RADIO_Dec</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = RADIO_Dec &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[41c]"></a>RADIO_Inc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = RADIO_Inc &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[41e]"></a>RADIO_Callback</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = RADIO_Callback &rArr; _OnPaint &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(.text)
</UL>
<P><STRONG><a name="[41f]"></a>RADIO_CreateEx</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = RADIO_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateIndirect
</UL>

<P><STRONG><a name="[421]"></a>RADIO_GetValue</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RADIO_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnRadioValueChanged
</UL>

<P><STRONG><a name="[b5]"></a>RADIO_CreateIndirect</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, radio_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = RADIO_CreateIndirect &rArr; RADIO_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scope.o(.constdata)
<LI> scop_menu.o(.constdata)
</UL>
<P><STRONG><a name="[422]"></a>RADIO_SetBkColor</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, radio_setbkcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = RADIO_SetBkColor &rArr; WM_SetTransState &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[42c]"></a>RADIO_SetGroupId</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, radio_setgroupid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = RADIO_SetGroupId &rArr; _SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextInGroup
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[42d]"></a>RADIO_SetText</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, radio_settext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = RADIO_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[42e]"></a>RADIO_SetTextColor</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, radio_settextcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = RADIO_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[3ed]"></a>SCROLLBAR_SetValue</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[43b]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
</UL>

<P><STRONG><a name="[43c]"></a>SCROLLBAR_Dec</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SCROLLBAR_Dec &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[43d]"></a>SCROLLBAR_Inc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[440]"></a>SCROLLBAR__InvalidatePartner</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SCROLLBAR__InvalidatePartner &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[442]"></a>SCROLLBAR_Callback</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SCROLLBAR_Callback &rArr; _Paint &rArr; _DrawTriangle &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnSetScrollState
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(.text)
</UL>
<P><STRONG><a name="[443]"></a>SCROLLBAR_CreateEx</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
</UL>

<P><STRONG><a name="[3eb]"></a>SCROLLBAR_SetNumItems</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SCROLLBAR_SetNumItems &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[3ec]"></a>SCROLLBAR_SetPageSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SCROLLBAR_SetPageSize &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[445]"></a>SCROLLBAR_SetState</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, scrollbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
</UL>

<P><STRONG><a name="[3e8]"></a>SCROLLBAR_Create</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, scrollbar_create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddScrollbar
</UL>

<P><STRONG><a name="[446]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, scrollbar_create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[3c6]"></a>SCROLLBAR_GetDefaultWidth</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar_defaults.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[626]"></a>SCROLLBAR_SetDefaultWidth</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scrollbar_defaults.o(.text), UNUSED)

<P><STRONG><a name="[627]"></a>SCROLLBAR_SetDefaultColor</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scrollbar_defaults.o(.text), UNUSED)

<P><STRONG><a name="[388]"></a>SCROLLBAR_GetValue</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scrollbar_getvalue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCROLLBAR_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
</UL>

<P><STRONG><a name="[3c4]"></a>SCROLLBAR_SetColor</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, scrollbar_setcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>

<P><STRONG><a name="[3c7]"></a>SCROLLBAR_SetWidth</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, scrollbar_setwidth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[44d]"></a>SLIDER_SetValue</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SLIDER_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[450]"></a>SLIDER_Dec</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SLIDER_Dec &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[451]"></a>SLIDER_Inc</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SLIDER_Inc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[453]"></a>SLIDER_Callback</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = SLIDER_Callback &rArr; _Paint &rArr; GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.text)
</UL>
<P><STRONG><a name="[454]"></a>SLIDER_CreateEx</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = SLIDER_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateIndirect
</UL>

<P><STRONG><a name="[455]"></a>SLIDER_SetWidth</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, slider.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[456]"></a>SLIDER_SetRange</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SLIDER_SetRange &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[457]"></a>SLIDER_SetNumTicks</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SLIDER_SetNumTicks &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[458]"></a>SLIDER_SetBkColor</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SLIDER_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[628]"></a>SLIDER_SetDefaultBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, slider.o(.text), UNUSED)

<P><STRONG><a name="[45b]"></a>SLIDER_GetValue</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SLIDER_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderValueChanged
</UL>

<P><STRONG><a name="[b6]"></a>SLIDER_CreateIndirect</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, slider_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SLIDER_CreateIndirect &rArr; SLIDER_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scope.o(.constdata)
</UL>
<P><STRONG><a name="[45f]"></a>TEXT_Callback</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = TEXT_Callback &rArr; _Paint &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(.text)
</UL>
<P><STRONG><a name="[460]"></a>TEXT_CreateEx</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = TEXT_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateIndirect
</UL>

<P><STRONG><a name="[b8]"></a>TEXT_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, text_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = TEXT_CreateIndirect &rArr; TEXT_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scope.o(.constdata)
<LI> scop_menu.o(.constdata)
</UL>
<P><STRONG><a name="[461]"></a>TEXT_SetBkColor</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, text_setbkcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[462]"></a>TEXT_SetFont</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, text_setfont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TEXT_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[463]"></a>TEXT_SetText</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, text_settext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderValueChanged
</UL>

<P><STRONG><a name="[464]"></a>TEXT_SetTextColor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, text_settextcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TEXT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
</UL>

<P><STRONG><a name="[46c]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
</UL>

<P><STRONG><a name="[414]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[2ca]"></a>WIDGET__GetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WIDGET__GetBkColor &rArr; WM_GetBkColor &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIALOG_GetBkColor
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[314]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClientRect
</UL>

<P><STRONG><a name="[430]"></a>WIDGET__GetXSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, widget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowSize
</UL>

<P><STRONG><a name="[431]"></a>WIDGET__GetYSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, widget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowSize
</UL>

<P><STRONG><a name="[44f]"></a>WIDGET__GetWindowSizeX</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetWindowSizeX &rArr; WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2bf]"></a>WIDGET_SetState</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WIDGET_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetState
</UL>

<P><STRONG><a name="[46a]"></a>WIDGET_GetState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, widget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[2ae]"></a>WIDGET_OrState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SliderPressed
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarPressed
</UL>

<P><STRONG><a name="[2b1]"></a>WIDGET_AndState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SliderReleased
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarReleased
</UL>

<P><STRONG><a name="[2b8]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateEx
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_CreateEx
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
</UL>

<P><STRONG><a name="[2b4]"></a>WIDGET_HandleActive</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateChildPostions
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[385]"></a>WIDGET__SetScrollState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
</UL>

<P><STRONG><a name="[44a]"></a>WIDGET__DrawFocusRect</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET__DrawFocusRect &rArr; GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[449]"></a>WIDGET__DrawVLine</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WIDGET__DrawVLine &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3fb]"></a>WIDGET__FillRectEx</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WIDGET__FillRectEx &rArr; GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextItem
</UL>

<P><STRONG><a name="[2cb]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WIDGET__EFFECT_DrawDownRect &rArr; _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2ef]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WIDGET__EFFECT_DrawDown &rArr; WIDGET__EFFECT_DrawDownRect &rArr; _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[2f0]"></a>WIDGET__EFFECT_DrawUpRect</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WIDGET__EFFECT_DrawUpRect &rArr; _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextItem
</UL>

<P><STRONG><a name="[46e]"></a>WIDGET_SetDefaultEffect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, widget.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect_3D
</UL>

<P><STRONG><a name="[2d4]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
</UL>

<P><STRONG><a name="[ae]"></a>WIDGET_EFFECT_3D_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = WIDGET_EFFECT_3D_DrawUp &rArr; _WIDGET_EFFECT_3D_DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[46d]"></a>WIDGET_SetDefaultEffect_3D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget_effect_3d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
</UL>

<P><STRONG><a name="[315]"></a>WIDGET__FillStringInRect</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, widget_fillstringinrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3e9]"></a>WIDGET_SetEffect</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, widget_seteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddScrollbar
</UL>

<P><STRONG><a name="[447]"></a>WIDGET_SetWidth</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, widget_setwidth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[472]"></a>WINDOW_Callback</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WINDOW_Callback &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>WINDOW_CreateIndirect</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WINDOW_CreateIndirect &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scop_menu.o(.constdata)
</UL>
<P><STRONG><a name="[473]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[477]"></a>WM__RectIsNZ</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
</UL>

<P><STRONG><a name="[476]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[479]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[47b]"></a>WM__ActivateClipRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[47c]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
</UL>

<P><STRONG><a name="[47d]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[47e]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[480]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[481]"></a>WM__DetachWindow</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
</UL>

<P><STRONG><a name="[482]"></a>WM_SelectWindow</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_SelectWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[483]"></a>WM__RemoveFromLinList</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[484]"></a>WM__SendMsgNoData</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[485]"></a>WM__IsWindow</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[2e0]"></a>WM_DeleteWindow</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_DeleteWindow &rArr; WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetNextDrawWin
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckCriticalHandles
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClose
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DeletePage
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteScrollbar
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[2d9]"></a>WM_SendMessage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>

<P><STRONG><a name="[3f4]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcBorderRect
</UL>

<P><STRONG><a name="[380]"></a>WM_InvalidateRect</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
</UL>

<P><STRONG><a name="[2ba]"></a>WM_InvalidateWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderValueChanged
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextColor
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButton
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetFont
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetNumDecs
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetFactor
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetTextColor
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetFont
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetTickDist
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_SetAlign
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOffY
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetLineStyleV
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetLineStyleH
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridFixedX
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetVSizeY
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetVSizeX
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetUserDraw
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColorEx
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetBkColor
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetWidth
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnSetScrollState
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetTextColor
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetBkColor
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_EnablePage
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DisablePage
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateWindowAndDescs
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColorEx
</UL>

<P><STRONG><a name="[2b7]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddToLinList
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateEx
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_CreateEx
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindow
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
</UL>

<P><STRONG><a name="[48e]"></a>WM_CreateWindow</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[343]"></a>WM_GetActiveWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>

<P><STRONG><a name="[1c8]"></a>WM__GetNextIVR</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMin
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMax
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>

<P><STRONG><a name="[1c7]"></a>WM__InitIVRSearch</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetInvalidRectAbs
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMin
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMax
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>

<P><STRONG><a name="[491]"></a>WM_SetDefault</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault &rArr; GUI_SetColor &rArr; LCD_SetColor &rArr; LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>

<P><STRONG><a name="[496]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransTopSiblings
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[497]"></a>WM__Paint</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WM__Paint &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[499]"></a>WM_Exec1</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[1ea]"></a>WM_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; WM__Paint &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[2b5]"></a>WM_DefaultProc</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWin
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientCallback
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[215]"></a>WM_Activate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[290]"></a>WM_Deactivate</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[256]"></a>WM_Init</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WM_Init &rArr; WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindow
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[49c]"></a>WM__ForEachDesc</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm__foreachdesc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM_ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>

<P><STRONG><a name="[42b]"></a>WM__GetFirstSibling</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm__getfirstsibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetGroupId
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearSelection
</UL>

<P><STRONG><a name="[49e]"></a>WM__GetFocussedChild</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm__getfocussedchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetFocussedChild &rArr; WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnPrevChild
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[4a0]"></a>WM__GetLastSibling</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm__getlastsibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetLastSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[427]"></a>WM__GetPrevSibling</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm__getprevsibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevInGroup
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[346]"></a>WM__IsAncestor</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm__isancestor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>

<P><STRONG><a name="[345]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm__isancestor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestorOrSelf &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>

<P><STRONG><a name="[49f]"></a>WM__IsChild</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm__ischild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
</UL>

<P><STRONG><a name="[2a9]"></a>WM__IsEnabled</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm__isenabled.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>

<P><STRONG><a name="[468]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__screen2client.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[34c]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__sendmessage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendToOwner
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsInGroup
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>

<P><STRONG><a name="[4a1]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm__sendmessageifenabled.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[4a2]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, wm__sendmessagenopara.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
</UL>

<P><STRONG><a name="[466]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 308 bytes, Stack size 64 bytes, wm__updatechildpositions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateChildPostions
</UL>

<P><STRONG><a name="[4a3]"></a>WM_DetachWindow</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm_attachwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM_DetachWindow &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
</UL>

<P><STRONG><a name="[4a4]"></a>WM_AttachWindow</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, wm_attachwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_AttachWindow &rArr; WM_DetachWindow &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetStayOnTop
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
</UL>

<P><STRONG><a name="[407]"></a>WM_AttachWindowAt</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, wm_attachwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_AttachWindowAt &rArr; WM_AttachWindow &rArr; WM_DetachWindow &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_AddPage
</UL>

<P><STRONG><a name="[48d]"></a>WM_BringToBottom</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, wm_bringtobottom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[33b]"></a>WM_BringToTop</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_bringtotop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_BringToTop &rArr; _BringToTop &rArr; _InvalidateWindowAndDescs &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientCallback
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[384]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm_checkscrollpos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
</UL>

<P><STRONG><a name="[4a7]"></a>WM_CheckScrollPos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_checkscrollpos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>

<P><STRONG><a name="[3da]"></a>WM_SetScrollValue</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm_checkscrollpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_SetScrollValue
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[49b]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_criticalhandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[4cc]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_criticalhandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[4a8]"></a>WM_SetEnableState</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, wm_enablewindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM_SetEnableState &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
</UL>

<P><STRONG><a name="[4a9]"></a>WM_EnableWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_enablewindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM_EnableWindow &rArr; WM_SetEnableState &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonChange
</UL>

<P><STRONG><a name="[4aa]"></a>WM_DisableWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_enablewindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM_DisableWindow &rArr; WM_SetEnableState &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonChange
</UL>

<P><STRONG><a name="[49d]"></a>WM_ForEachDesc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_foreachdesc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM_ForEachDesc &rArr; WM__ForEachDesc &rArr;  WM_ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateWindowAndDescs
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[420]"></a>WM_GetBkColor</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_getbkcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_GetBkColor &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
</UL>

<P><STRONG><a name="[4ab]"></a>WM_GetClientRectEx</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm_getclientrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>

<P><STRONG><a name="[1f6]"></a>WM_GetClientRect</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_getclientrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetClientRect &rArr; WM_GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_GetRect
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDown
</UL>

<P><STRONG><a name="[2dc]"></a>WM_GetClientWindow</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wm_getclientwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_GetClientWindow &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderValueChanged
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[253]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_getdesktopwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>

<P><STRONG><a name="[3c3]"></a>WM_GetDialogItem</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getdialogitem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3WAVEDownChange
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3ButtonChange
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog1TimeDownChange
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderValueChanged
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnRadioValueChanged
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonChange
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[47f]"></a>WM_GetFirstChild</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_getfirstchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFirstChild
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[4ad]"></a>WM_GetFlags</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm_getflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[30c]"></a>WM_GetFocussedWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_getfocussedwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[369]"></a>WM_GetId</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, wm_getid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButton
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[444]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, wm_getinsiderect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[359]"></a>WM_GetInsideRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getinsiderect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_GetInsideRect &rArr; WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMin
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMax
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[377]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, wm_getinsiderectexscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
</UL>

<P><STRONG><a name="[429]"></a>WM_GetNextSibling</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_getnextsibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetNextSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextInGroup
</UL>

<P><STRONG><a name="[400]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_getorg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowOrgX
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[401]"></a>WM_GetWindowOrgY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_getorg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowOrgY
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[37a]"></a>WM_GetOrgX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_getorg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetOrgX &rArr; WM_GetWindowOrgX
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
</UL>

<P><STRONG><a name="[37b]"></a>WM_GetOrgY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_getorg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetOrgY &rArr; WM_GetWindowOrgY
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
</UL>

<P><STRONG><a name="[2fb]"></a>WM_GetParent</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_getparent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetStayOnTop
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendToOwner
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientCallback
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[38c]"></a>WM_GetScrollbarH</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_getscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM_GetScrollbarH &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteScrollbar
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddScrollbar
</UL>

<P><STRONG><a name="[38b]"></a>WM_GetScrollbarV</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_getscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM_GetScrollbarV &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[441]"></a>WM_GetScrollPartner</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm_getscrollpartner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[3df]"></a>WM_GetScrollState</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, wm_getscrollstate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[4ae]"></a>WM_GetWindowRect</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wm_getwindowrect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[433]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wm_getwindowrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[2f4]"></a>WM__GetWindowSizeX</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
</UL>

<P><STRONG><a name="[340]"></a>WM__GetWindowSizeY</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[320]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowSizeX
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
</UL>

<P><STRONG><a name="[341]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
</UL>

<P><STRONG><a name="[2cd]"></a>WM_HasCaptured</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_hascaptured.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
</UL>

<P><STRONG><a name="[36e]"></a>WM_HideWindow</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, wm_hide.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MinimizeFramewin
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowPage
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[419]"></a>WM_IsFocussable</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_isfocussable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_IsFocussable &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnPrevChild
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[34d]"></a>WM_IsWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_iswindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_IsWindow &rArr; WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[4b1]"></a>WM__MoveWindow</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>

<P><STRONG><a name="[4b2]"></a>WM__MoveTo</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM__MoveTo &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[355]"></a>WM_MoveWindow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[36c]"></a>WM_MoveTo</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MaximizeFramewin
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMaximized
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetAlign
</UL>

<P><STRONG><a name="[349]"></a>WM_MoveChildTo</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, wm_movechildto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_MoveChildTo &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddScrollbar
</UL>

<P><STRONG><a name="[2af]"></a>WM_NotifyParent</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, wm_notifyparent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SliderReleased
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SliderPressed
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnSetScrollState
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarReleased
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarPressed
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClickedOnMultipage
</UL>

<P><STRONG><a name="[209]"></a>WM_OnKey</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, wm_onkey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM_OnKey &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[629]"></a>WM_PID__GetPrevState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_pid__getprevstate.o(.text), UNUSED)

<P><STRONG><a name="[4cb]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_pid__getprevstate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[354]"></a>WM_ResizeWindow</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, wm_resizewindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + In Cycle
<LI>Call Chain = WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MinimizeFramewin
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMinimized
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[4b4]"></a>WM__IsInWindow</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_screen2win.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[4b5]"></a>WM_Screen2hWin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_screen2win.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_Screen2hWin &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2Win
</UL>

<P><STRONG><a name="[402]"></a>WM_Screen2hWinEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_screen2win.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_Screen2hWinEx &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2df]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_sendmessagenopara.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM_SendMessageNoPara &rArr; WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[49a]"></a>WM_SendToParent</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_sendtoparent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_SendToParent &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[35b]"></a>WM_SetCallback</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_setcallback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_SetCallback &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMinButton
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMaxButton
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[2ce]"></a>WM_SetCapture</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[4b7]"></a>WM_ReleaseCapture</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_setcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM_ReleaseCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[33c]"></a>WM_SetCaptureMove</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, wm_setcapturemove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_SetCaptureMove &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[4d3]"></a>WM_SetCreateFlags</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_setcreateflags.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveTaskCreat
</UL>

<P><STRONG><a name="[4b8]"></a>WM_SetDesktopColorEx</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wm_setdesktopcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM_SetDesktopColorEx &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColors
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColor
</UL>

<P><STRONG><a name="[4b9]"></a>WM_SetDesktopColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_setdesktopcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM_SetDesktopColor &rArr; WM_SetDesktopColorEx &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColorEx
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveTaskCreat
</UL>

<P><STRONG><a name="[4ba]"></a>WM_SetDesktopColors</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wm_setdesktopcolor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColorEx
</UL>

<P><STRONG><a name="[306]"></a>WM_SetFocus</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, wm_setfocus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WM_SetFocus &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandleSetValue
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SelectPage
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientCallback
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowPage
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnPrevChild
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[2de]"></a>WM_SetFocusOnNextChild</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_setfocusonnextchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[347]"></a>WM_SetFocusOnPrevChild</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_setfocusonprevchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WM_SetFocusOnPrevChild &rArr; _SetFocusOnPrevChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnPrevChild
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[4c0]"></a>WM__SetScrollbarV</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>

<P><STRONG><a name="[4c1]"></a>WM__SetScrollbarH</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[383]"></a>WM_SetScrollbarH</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
</UL>

<P><STRONG><a name="[382]"></a>WM_SetScrollbarV</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
</UL>

<P><STRONG><a name="[46b]"></a>WM_SetScrollState</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, wm_setscrollstate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>

<P><STRONG><a name="[2f5]"></a>WM_SetSize</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm_setsize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MaximizeFramewin
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMaximized
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddScrollbar
</UL>

<P><STRONG><a name="[45a]"></a>WM_SetHasTrans</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wm_settrans.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetBkColor
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
</UL>

<P><STRONG><a name="[459]"></a>WM_ClrHasTrans</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wm_settrans.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WM_ClrHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetBkColor
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
</UL>

<P><STRONG><a name="[2c9]"></a>WM_GetHasTrans</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_settrans.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetHasTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[423]"></a>WM_SetTransState</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, wm_settransstate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_SetTransState &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
</UL>

<P><STRONG><a name="[1bd]"></a>WM_SetUserClipRect</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_setusercliprect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[46f]"></a>WM_SetXSize</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_setxsize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_SetXSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[470]"></a>WM_SetYSize</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_setysize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[4c2]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_show.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[2dd]"></a>WM_ShowWindow</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wm_show.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMinimized
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowPage
</UL>

<P><STRONG><a name="[4c3]"></a>WM_SetStayOnTop</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm_stayontop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_SetStayOnTop &rArr; WM_AttachWindow &rArr; WM_DetachWindow &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
</UL>

<P><STRONG><a name="[4c4]"></a>WM_GetStayOnTop</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_stayontop.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[4c5]"></a>WM_EnableMemdev</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wmmemdev.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[350]"></a>WM_DisableMemdev</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wmmemdev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_DisableMemdev
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
</UL>

<P><STRONG><a name="[4c6]"></a>WM__IsInModalArea</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wmtouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__IsInModalArea &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[4c7]"></a>WM__SendPIDMessage</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, wmtouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[4c8]"></a>WM__SendTouchMessage</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wmtouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__SendTouchMessage &rArr; WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[61]"></a>WM_HandlePID</STRONG> (Thumb, 530 bytes, Stack size 96 bytes, wmtouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM_HandlePID &rArr; GUI_CURSOR_SetPosition &rArr; _CalcRect
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2Win
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(.text)
</UL>
<P><STRONG><a name="[4ce]"></a>InitDialog</STRONG> (Thumb, 1100 bytes, Stack size 40 bytes, scope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = InitDialog &rArr; GRAPH_SetBorder &rArr; _ManageScrollBars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextColor
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMinButton
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMaxButton
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetFactor
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetTextColor
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_SetAlign
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_SetOffY
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetVSizeY
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetVSizeX
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetUserDraw
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetBkColor
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetGroupId
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback
</UL>

<P><STRONG><a name="[e1]"></a>Get_Signal</STRONG> (Thumb, 716 bytes, Stack size 36 bytes, scope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Get_Signal
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>Updata_signal</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, scope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Updata_signal &rArr; GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; _InvalidateGraph &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e0]"></a>WaveTaskCreat</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WaveTaskCreat &rArr; GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDesktopColor
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCreateFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d0]"></a>MEUN_CREAT</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, scop_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = MEUN_CREAT &rArr; MULTIPAGE_AddPage &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Create
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMinButton
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetStayOnTop
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_AddPage
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonChange
</UL>

<P><STRONG><a name="[62a]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[4cd]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UserDraw
</UL>

<P><STRONG><a name="[4ed]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[4ee]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[4d8]"></a>__printf</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, __printf_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[20f]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[19e]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
</UL>

<P><STRONG><a name="[30f]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetText
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_AddPage
</UL>

<P><STRONG><a name="[19c]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP_DDB
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetText
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_AddPage
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[4db]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[62b]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateHole
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
</UL>

<P><STRONG><a name="[4dc]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[62c]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_brush_screen
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W_M
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[62d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[62e]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[62f]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2a6]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
</UL>

<P><STRONG><a name="[630]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[4df]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[4de]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2a7]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
</UL>

<P><STRONG><a name="[631]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[632]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[4e0]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[505]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[633]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[634]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[635]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[636]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[637]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[4e1]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[4e3]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[638]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[4ea]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[4d7]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[7d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[639]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[63a]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[4ef]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[4dd]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[63b]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[4e2]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[63c]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[63d]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[4e9]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4ec]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[4e5]"></a>_btod_etento</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[63e]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[4f0]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[63f]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[cf]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[4e6]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4f4]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[4f3]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[4f5]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[4f6]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[4e7]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4e8]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4f7]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[4eb]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[272]"></a>__hardfp_floor</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, floor.o(i.__hardfp_floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[171]"></a>__hardfp_sin</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDAC
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3WAVEDownChange
</UL>

<P><STRONG><a name="[4fc]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[4fd]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[503]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[4ff]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[4fb]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[4fa]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[504]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[4d9]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[500]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[c8]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[4fe]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[640]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[641]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[642]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[643]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[644]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[10c]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[506]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[172]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDAC
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3WAVEDownChange
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>

<P><STRONG><a name="[509]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[510]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[10b]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
</UL>

<P><STRONG><a name="[50c]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[501]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[50d]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[104]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetPhyXY
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDAC
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3WAVEDownChange
</UL>

<P><STRONG><a name="[50e]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[502]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[645]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[101]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustTouchPanel
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetPhyXY
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDAC
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3WAVEDownChange
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[646]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[647]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[50f]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[513]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[102]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetPhyXY
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDAC
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3WAVEDownChange
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[511]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[508]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[50b]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[4f8]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>

<P><STRONG><a name="[512]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[4f9]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>

<P><STRONG><a name="[514]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetPhyXY
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[516]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[271]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UserDraw
</UL>

<P><STRONG><a name="[517]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[518]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[c4]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[648]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[649]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[507]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[c2]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[111]"></a>GPIO_AF_FSMC_Config</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, tftlcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_AF_FSMC_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
</UL>

<P><STRONG><a name="[112]"></a>LCD_GPIO_Config</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, tftlcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_FSMC_Config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
</UL>

<P><STRONG><a name="[114]"></a>LCD_FSMC_Config</STRONG> (Thumb, 90 bytes, Stack size 96 bytes, tftlcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LCD_FSMC_Config &rArr; LCD_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTLCD_Init
</UL>

<P><STRONG><a name="[142]"></a>TIM4_GPIO_Config</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, pwm_output.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
</UL>

<P><STRONG><a name="[143]"></a>TIM4_Mode_Config</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, pwm_output.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
</UL>

<P><STRONG><a name="[14d]"></a>TIM5_GPIO_Config</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, pwm_output.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM5_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_PWM_Init
</UL>

<P><STRONG><a name="[14e]"></a>TIM5_Mode_Config</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, pwm_output.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TIM5_Mode_Config &rArr; TIM_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_PWM_Init
</UL>

<P><STRONG><a name="[155]"></a>TIM1_Config</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, bsp_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIM1_Config &rArr; TIM_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitADC
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Open
</UL>

<P><STRONG><a name="[17b]"></a>TI4_Config</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[181]"></a>TI3_Config</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[17f]"></a>TI2_Config</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
</UL>

<P><STRONG><a name="[17d]"></a>TI1_Config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
</UL>

<P><STRONG><a name="[18a]"></a>SetSysClock</STRONG> (Thumb, 168 bytes, Stack size 12 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1a4]"></a>_IsLineEnd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui__wrap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
</UL>

<P><STRONG><a name="[1a1]"></a>_GetNoWrap</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui__wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetNoWrap &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[1a3]"></a>_GetWordWrap</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, gui__wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetWordWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsLineEnd
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[1a5]"></a>_GetCharWrap</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, gui__wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetCharWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[1a6]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui__wrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _WrapGetNumCharsDisp &rArr; _GetWordWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNoWrap
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[1ae]"></a>_Check_NegLong</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_adddecshift.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Check_NegLong
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>

<P><STRONG><a name="[1c9]"></a>_DrawFocusRect</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gui_drawfocusrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _DrawFocusRect &rArr; LCD_DrawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>

<P><STRONG><a name="[1cd]"></a>_DrawGraph</STRONG> (Thumb, 444 bytes, Stack size 72 bytes, gui_drawgraphex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawGraph &rArr; LCD_DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
</UL>

<P><STRONG><a name="[1d9]"></a>_SwapInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_drawline.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[1d8]"></a>Abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[1d3]"></a>_atan0_45</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, gui_drawline.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
</UL>

<P><STRONG><a name="[1d2]"></a>_atan2</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, gui_drawline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _atan2
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan0_45
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcOrto
</UL>

<P><STRONG><a name="[1da]"></a>_SetLineColor</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, gui_drawline.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[1d4]"></a>_CalcOrto</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gui_drawline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _CalcOrto &rArr; GUI_cos &rArr; GUI_sin
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[1d5]"></a>_DrawLineEnd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_drawline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawLineEnd &rArr; GL_DrawPoint &rArr; GL_FillCircle &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[1eb]"></a>_DrawHLine</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_fillpolygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DrawHLine &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[1f1]"></a>_CheckYInterSect</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gui_fillpolygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _CheckYInterSect
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[1ee]"></a>_Add</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, gui_fillpolygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Add
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPoint
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[1ef]"></a>_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_fillpolygon.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[1ec]"></a>_Flush</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, gui_fillpolygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Flush &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[1ed]"></a>_AddPoint</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_fillpolygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _AddPoint &rArr; _Add
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[1f0]"></a>_GetPrevPointDiffy</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_fillpolygon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetPrevPointDiffy
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[201]"></a>_GotoY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_goto.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoY
</UL>

<P><STRONG><a name="[203]"></a>_GotoX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_goto.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoX
</UL>

<P><STRONG><a name="[20e]"></a>_PID_Load</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_pid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[22b]"></a>_AD2X</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[22c]"></a>_AD2Y</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[226]"></a>_Log2Phys</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_touch_driveranalog.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[223]"></a>_StoreUnstable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_touch_driveranalog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _StoreUnstable &rArr; GUI_TOUCH_StoreUnstable &rArr; GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreUnstable
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[7f]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[231]"></a>_DrawRect</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, gui2dlib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawRect &rArr; LCD_DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>

<P><STRONG><a name="[23a]"></a>_Size2LegalSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[241]"></a>_GetSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
</UL>

<P><STRONG><a name="[243]"></a>_Free</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Free
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>

<P><STRONG><a name="[23b]"></a>_FindFreeHandle</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _FindFreeHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[23c]"></a>_FindHole</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _FindHole
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[233]"></a>_CreateHole</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[235]"></a>_CheckInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumUsedBlocks
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumUsedBytes
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBlocks
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBytes
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[238]"></a>_GetNumFreeBytes</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetNumFreeBytes &rArr; GUI_ALLOC_GetMaxSize
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[239]"></a>_Alloc</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumFreeBytes
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateHole
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindHole
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindFreeHandle
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Size2LegalSize
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>

<P><STRONG><a name="[247]"></a>_DispLine</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, guicharline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[249]"></a>GUIPROP_FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guicharp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[24a]"></a>Draw8Point</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
</UL>

<P><STRONG><a name="[252]"></a>_InitContext</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, guicore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _InitContext &rArr; LCD_SetColor &rArr; LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_GetRect
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[259]"></a>_SetPixelIndex</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>

<P><STRONG><a name="[257]"></a>_GetPixelIndex</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetPixelIndex &rArr; LCD_L0_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[258]"></a>_Undraw</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Undraw &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Hide
</UL>

<P><STRONG><a name="[25a]"></a>_Log2Phys</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, guicurs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[25c]"></a>_Draw</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Draw &rArr; _GetPixelIndex &rArr; LCD_L0_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2Phys
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[263]"></a>_CalcRect</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _CalcRect
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPosition
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
</UL>

<P><STRONG><a name="[25e]"></a>_Hide</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Hide &rArr; _Undraw &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Deactivate
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TempHide
</UL>

<P><STRONG><a name="[25f]"></a>_Show</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Show &rArr; _Draw &rArr; _GetPixelIndex &rArr; LCD_L0_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Activate
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TempUnhide
</UL>

<P><STRONG><a name="[62]"></a>_TempHide</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _TempHide &rArr; _Hide &rArr; _Undraw &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Hide
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicurs.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>_TempUnhide</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicurs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _TempUnhide &rArr; _Show &rArr; _Draw &rArr; _GetPixelIndex &rArr; LCD_L0_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicurs.o(.text)
</UL>
<P><STRONG><a name="[267]"></a>DB2SJIS</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guiencjs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine_SJIS
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLineDistX_SJIS
</UL>

<P><STRONG><a name="[83]"></a>_GetLineDistX_SJIS</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, guiencjs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetLineDistX_SJIS
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB2SJIS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiencjs.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>_GetLineLen_SJIS</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, guiencjs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> guiencjs.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>_DispLine_SJIS</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, guiencjs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _DispLine_SJIS &rArr; GL_DispChar &rArr; GUI_DispNextLine
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB2SJIS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiencjs.o(.constdata)
</UL>
<P><STRONG><a name="[270]"></a>_DispFloatFix</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, guivalf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSFloatMin
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSFloatFix
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloat
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatFix
</UL>

<P><STRONG><a name="[279]"></a>_GetColorIndex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>

<P><STRONG><a name="[283]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 184 bytes, Stack size 36 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitLine1BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_GetPixelIndex
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[284]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 254 bytes, Stack size 36 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitLine2BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[285]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 254 bytes, Stack size 36 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitLine4BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[286]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _DrawBitLine8BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[287]"></a>DrawBitLine16BPP</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, lcdtemplate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DrawBitLine16BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[294]"></a>_DrawBitLine16BPP_DDB</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine16BPP_DDB
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[295]"></a>_XY2PTR</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[299]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 248 bytes, Stack size 56 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[29a]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[29b]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[298]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[296]"></a>_DrawBitLine8BPP_DDB</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine8BPP_DDB
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9e]"></a>_DrawBitmap</STRONG> (Thumb, 330 bytes, Stack size 88 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP_DDB
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>_FillRect</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>_DrawHLine</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>_DrawVLine</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[a4]"></a>_SetPixelIndex</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>_XorPixel</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>_GetPixelIndex</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[29f]"></a>_Min</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_banding.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[a6]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_USAGE_BM_AddPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_USAGE_BM_Clear &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[a9]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[2a8]"></a>_Paint</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[2ac]"></a>_Delete</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _Delete &rArr; GUI_ALLOC_FreePtrArray &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[2ad]"></a>_OnButtonPressed</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2b0]"></a>_OnButtonReleased</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2b2]"></a>_OnTouch</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _OnTouch &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[2c8]"></a>_Paint</STRONG> (Thumb, 406 bytes, Stack size 48 bytes, checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
</UL>

<P><STRONG><a name="[2cc]"></a>_OnTouch</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _OnTouch &rArr; CHECKBOX_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
</UL>

<P><STRONG><a name="[2d0]"></a>_OnKey</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _OnKey &rArr; CHECKBOX_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
</UL>

<P><STRONG><a name="[2d1]"></a>_Delete</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
</UL>

<P><STRONG><a name="[2e4]"></a>_GethItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GethItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
</UL>

<P><STRONG><a name="[2e6]"></a>_DrawTriangleDown</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawTriangleDown &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2e7]"></a>_GetpItem</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetpItem &rArr; _GethItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[2eb]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dropdown.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[2ea]"></a>_SelectByKey</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _SelectByKey &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[2ec]"></a>_FreeAttached</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _FreeAttached &rArr; WM_DeleteWindow &rArr; WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[2ee]"></a>_Paint</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangleDown
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[2f1]"></a>_OnTouch</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _OnTouch &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[313]"></a>_Paint</STRONG> (Thumb, 350 bytes, Stack size 64 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorCharacter
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[316]"></a>_Delete</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[317]"></a>_IncrementBuffer</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
</UL>

<P><STRONG><a name="[318]"></a>_IsSpaceInBuffer</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[319]"></a>_IsCharsAvailable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _IsCharsAvailable &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[31a]"></a>_DeleteChar</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DeleteChar &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[31b]"></a>_InsertChar</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _InsertChar &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[321]"></a>_OnTouch</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _OnTouch &rArr; EDIT_SetCursorAtPixel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[322]"></a>_SetValue</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetValueUnsigned
</UL>

<P><STRONG><a name="[332]"></a>_DecChar2Int</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, editdec.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
</UL>

<P><STRONG><a name="[66]"></a>_UpdateBuffer</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, editdec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _UpdateBuffer &rArr; GUI_AddDecShift &rArr; _Check_NegLong
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> editdec.o(.text)
</UL>
<P><STRONG><a name="[331]"></a>_EditDec</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, editdec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _EditDec &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecChar2Int
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[333]"></a>_MakePositive</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, editdec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _MakePositive &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapSign
</UL>

<P><STRONG><a name="[334]"></a>_MakeNegative</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, editdec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _MakeNegative &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapSign
</UL>

<P><STRONG><a name="[335]"></a>_SwapSign</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, editdec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _SwapSign &rArr; _MakeNegative &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNegative
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakePositive
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[336]"></a>_IncrementCursor</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, editdec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _IncrementCursor &rArr; EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[337]"></a>_AddPosition</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, editdec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _AddPosition &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[65]"></a>_AddKeyDec</STRONG> (Thumb, 270 bytes, Stack size 16 bytes, editdec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _AddKeyDec &rArr; _EditDec &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPosition
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapSign
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNegative
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakePositive
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecChar2Int
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> editdec.o(.text)
</UL>
<P><STRONG><a name="[339]"></a>_SetActive</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>

<P><STRONG><a name="[33a]"></a>_OnTouch</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _OnTouch &rArr; WM_SetCaptureMove &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[342]"></a>_Paint</STRONG> (Thumb, 308 bytes, Stack size 80 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[344]"></a>_OnChildHasFocus</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _OnChildHasFocus &rArr; _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[67]"></a>FRAMEWIN__cbClient</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = FRAMEWIN__cbClient &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>_cbClose</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, framewin_buttonclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _cbClose &rArr; BUTTON_Callback &rArr; _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonclose.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>_Draw</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, framewin_buttonclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _Draw &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonclose.o(.text)
</UL>
<P><STRONG><a name="[6b]"></a>_cbMax</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, framewin_buttonmax.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _cbMax &rArr; BUTTON_Callback &rArr; _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Restore
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Maximize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonmax.o(.text)
</UL>
<P><STRONG><a name="[35e]"></a>_DrawMax</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, framewin_buttonmax.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawMax &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[35f]"></a>_DrawRestore</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, framewin_buttonmax.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawRestore &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[6a]"></a>_Draw</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, framewin_buttonmax.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _Draw &rArr; _DrawRestore &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMax
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonmax.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>_cbMin</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, framewin_buttonmin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _cbMin &rArr; BUTTON_Callback &rArr; _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Minimize
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Restore
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonmin.o(.text)
</UL>
<P><STRONG><a name="[362]"></a>_DrawMin</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, framewin_buttonmin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawMin &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[363]"></a>_DrawRestore</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, framewin_buttonmin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawRestore &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[6c]"></a>_Draw</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, framewin_buttonmin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _Draw &rArr; _DrawRestore &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRestore
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMin
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonmin.o(.text)
</UL>
<P><STRONG><a name="[368]"></a>_InvalidateButton</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, framewin_minmaxrest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _InvalidateButton &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MaximizeFramewin
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MinimizeFramewin
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMaximized
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMinimized
</UL>

<P><STRONG><a name="[36a]"></a>_RestoreMinimized</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, framewin_minmaxrest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _RestoreMinimized &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButton
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MaximizeFramewin
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Restore
</UL>

<P><STRONG><a name="[36b]"></a>_RestoreMaximized</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, framewin_minmaxrest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _RestoreMaximized &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButton
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MinimizeFramewin
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Restore
</UL>

<P><STRONG><a name="[36d]"></a>_MinimizeFramewin</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, framewin_minmaxrest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _MinimizeFramewin &rArr; _RestoreMaximized &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMaximized
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButton
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Minimize
</UL>

<P><STRONG><a name="[36f]"></a>_MaximizeFramewin</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, framewin_minmaxrest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _MaximizeFramewin &rArr; _RestoreMinimized &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreMinimized
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButton
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Maximize
</UL>

<P><STRONG><a name="[376]"></a>_DrawGrid</STRONG> (Thumb, 280 bytes, Stack size 56 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _DrawGrid &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[379]"></a>_DrawBorder</STRONG> (Thumb, 326 bytes, Stack size 72 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _DrawBorder &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[37d]"></a>_GetParams</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetParams
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollBars
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[37c]"></a>_OnPaint</STRONG> (Thumb, 328 bytes, Stack size 80 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _OnPaint &rArr; _DrawBorder &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetParams
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[37e]"></a>_OnDelete</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _OnDelete &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[37f]"></a>_InvalidateGraph</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _InvalidateGraph &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetParams
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetGridOffY
</UL>

<P><STRONG><a name="[381]"></a>_ManageScrollBars</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _ManageScrollBars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetParams
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetVSizeY
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetVSizeX
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[386]"></a>_SetGridOffY</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, graph.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateGraph
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
</UL>

<P><STRONG><a name="[387]"></a>_OnScrollValueChanged</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _OnScrollValueChanged &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[6e]"></a>_OnPaint</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, graph_data_yt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _OnPaint &rArr; GUI_DrawGraphEx &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(.text)
</UL>
<P><STRONG><a name="[6f]"></a>_OnDelete</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graph_data_yt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _OnDelete &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(.text)
</UL>
<P><STRONG><a name="[39d]"></a>_SetOffY</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, graph_data_yt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _SetOffY &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_SetOffY
</UL>

<P><STRONG><a name="[3a2]"></a>_OnPaintVert</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, graph_scale.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _OnPaintVert &rArr; GUI_DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[3a3]"></a>_OnPaintHorz</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, graph_scale.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _OnPaintHorz &rArr; GUI_DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[70]"></a>_OnPaint</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, graph_scale.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _OnPaint &rArr; _OnPaintHorz &rArr; GUI_DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_scale.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>_Draw</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_draw_self.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>_GetXSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_draw_self.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>_GetYSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_draw_self.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[3b4]"></a>_CallOwnerDraw</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
</UL>

<P><STRONG><a name="[3b5]"></a>_GetYSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
</UL>

<P><STRONG><a name="[3b6]"></a>_GetItemSizeX</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _GetItemSizeX &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[3b7]"></a>_GetItemSizeY</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>

<P><STRONG><a name="[3ba]"></a>_GetContentsSizeX</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _GetContentsSizeX &rArr; _GetItemSizeX &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[3bb]"></a>_GetItemPosY</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
</UL>

<P><STRONG><a name="[3bc]"></a>_IsPartiallyVis</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[3bd]"></a>_GetNumVisItems</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _GetNumVisItems &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMouseOver
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[3be]"></a>_NotifyOwner</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _NotifyOwner &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[3bf]"></a>_SendToOwner</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SendToOwner &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[3c0]"></a>_UpdateScrollPos</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[3c1]"></a>_CalcScrollParas</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[3c8]"></a>_ManageAutoScroll</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _ManageAutoScroll &rArr; _GetNumVisItems &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[3cb]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, listbox.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsAlphaNum
</UL>

<P><STRONG><a name="[3ca]"></a>_IsAlphaNum</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _IsAlphaNum
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3ce]"></a>_SelectByKey</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = _SelectByKey &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpString
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3cf]"></a>_FreeAttached</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[3d0]"></a>_OnPaint</STRONG> (Thumb, 242 bytes, Stack size 72 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _OnPaint &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[3d2]"></a>_ToggleMultiSel</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _ToggleMultiSel &rArr; LISTBOX__InvalidateItem &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[3d3]"></a>_GetItemFromPos</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _GetItemFromPos &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMouseOver
</UL>

<P><STRONG><a name="[3d4]"></a>_OnTouch</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _OnTouch &rArr; _NotifyOwner &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[3d5]"></a>_OnMouseOver</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _OnMouseOver &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[3d6]"></a>_MoveSel</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
</UL>

<P><STRONG><a name="[3d9]"></a>_AddKey</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsAlphaNum
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[3e7]"></a>_AddScrollbar</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
</UL>

<P><STRONG><a name="[3ea]"></a>_SetScrollbar</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _SetScrollbar &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
</UL>

<P><STRONG><a name="[3ee]"></a>_DeleteScrollbar</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DeleteScrollbar &rArr; WM_DeleteWindow &rArr; WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
</UL>

<P><STRONG><a name="[3ef]"></a>_ShowPage</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _ShowPage &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DeletePage
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SelectPage
</UL>

<P><STRONG><a name="[3f0]"></a>_SetEnable</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, multipage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_EnablePage
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DisablePage
</UL>

<P><STRONG><a name="[3f1]"></a>_GetEnable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetEnable &rArr; GUI_ARRAY_GetpItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_IsPageEnabled
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SelectPage
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[3f2]"></a>_CalcClientRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _CalcClientRect &rArr; WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetAlign
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_CreateEx
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
</UL>

<P><STRONG><a name="[3f3]"></a>_CalcBorderRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _CalcBorderRect
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
</UL>

<P><STRONG><a name="[3f5]"></a>_GetPageSizeX</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetPageSizeX &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClickedOnMultipage
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPagePosX
</UL>

<P><STRONG><a name="[3f6]"></a>_GetPagePosX</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _GetPagePosX &rArr; _GetPageSizeX &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPageSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClickedOnMultipage
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextWidth
</UL>

<P><STRONG><a name="[3f7]"></a>_GetTextWidth</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _GetTextWidth &rArr; _GetPagePosX &rArr; _GetPageSizeX &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPagePosX
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
</UL>

<P><STRONG><a name="[3f8]"></a>_GetTextRect</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _GetTextRect &rArr; _GetTextWidth &rArr; _GetPagePosX &rArr; _GetPageSizeX &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextWidth
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcBorderRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClickedOnMultipage
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
</UL>

<P><STRONG><a name="[3f9]"></a>_UpdatePositions</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextWidth
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPageSizeX
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcBorderRect
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClientRect
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteScrollbar
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetAlign
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetFont
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetText
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DeletePage
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_CreateEx
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SelectPage
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
</UL>

<P><STRONG><a name="[3fa]"></a>_DrawTextItem</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _DrawTextItem &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3fc]"></a>_Paint</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _Paint &rArr; _DrawTextItem &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTextItem
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPagePosX
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcBorderRect
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
</UL>

<P><STRONG><a name="[3fe]"></a>_ClickedOnMultipage</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _ClickedOnMultipage &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SelectPage
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPagePosX
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPageSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[3ff]"></a>_OnTouch</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = _OnTouch &rArr; _ClickedOnMultipage &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWinEx
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClickedOnMultipage
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Callback
</UL>

<P><STRONG><a name="[403]"></a>_MoveSel</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _MoveSel &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SelectPage
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[404]"></a>_AddKey</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _AddKey &rArr; _MoveSel &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientCallback
</UL>

<P><STRONG><a name="[71]"></a>_Callback</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _Callback &rArr; _OnTouch &rArr; _ClickedOnMultipage &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdatePositions
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multipage.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>_ClientCallback</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, multipage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _ClientCallback &rArr; _AddKey &rArr; _MoveSel &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multipage.o(.text)
</UL>
<P><STRONG><a name="[413]"></a>_OnPaint</STRONG> (Thumb, 430 bytes, Stack size 72 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _OnPaint &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[418]"></a>_OnTouch</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _OnTouch &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[41d]"></a>_OnKey</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _OnKey &rArr; RADIO_Inc &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[424]"></a>_SetValue</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, radio_setgroupid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetGroupId
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandleSetValue
</UL>

<P><STRONG><a name="[425]"></a>_IsInGroup</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, radio_setgroupid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _IsInGroup &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearSelection
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextInGroup
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevInGroup
</UL>

<P><STRONG><a name="[426]"></a>_GetPrevInGroup</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, radio_setgroupid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetPrevInGroup &rArr; _IsInGroup &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsInGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandleSetValue
</UL>

<P><STRONG><a name="[428]"></a>_GetNextInGroup</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, radio_setgroupid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetNextInGroup &rArr; _IsInGroup &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsInGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetGroupId
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandleSetValue
</UL>

<P><STRONG><a name="[42a]"></a>_ClearSelection</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, radio_setgroupid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _ClearSelection &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsInGroup
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandleSetValue
</UL>

<P><STRONG><a name="[73]"></a>_HandleSetValue</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, radio_setgroupid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _HandleSetValue &rArr; _ClearSelection &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearSelection
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextInGroup
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevInGroup
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_setgroupid.o(.text)
</UL>
<P><STRONG><a name="[42f]"></a>_GetArrowSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetArrowSize
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetYSize
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[434]"></a>_WIDGET__RECT2VRECT</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _WIDGET__RECT2VRECT
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[432]"></a>_CalcPositions</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET__RECT2VRECT
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowSize
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[436]"></a>_DrawTriangle</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawTriangle &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[437]"></a>_Paint</STRONG> (Thumb, 350 bytes, Stack size 72 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _Paint &rArr; _DrawTriangle &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[438]"></a>_ScrollbarPressed</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _ScrollbarPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[439]"></a>_ScrollbarReleased</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _ScrollbarReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[43a]"></a>_OnTouch</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _OnTouch &rArr; _ScrollbarReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarReleased
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarPressed
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[43e]"></a>_OnKey</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _OnKey &rArr; SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[43f]"></a>_OnSetScrollState</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _OnSetScrollState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[448]"></a>_Paint</STRONG> (Thumb, 306 bytes, Stack size 64 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _Paint &rArr; GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[44b]"></a>_SliderPressed</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _SliderPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[44c]"></a>_SliderReleased</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _SliderReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[44e]"></a>_OnTouch</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _OnTouch &rArr; _SliderReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SliderReleased
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SliderPressed
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[452]"></a>_OnKey</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _OnKey &rArr; SLIDER_Inc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[45c]"></a>_FreeAttached</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _FreeAttached &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
</UL>

<P><STRONG><a name="[45d]"></a>_Paint</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _Paint &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[45e]"></a>_Delete</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Delete &rArr; _FreeAttached &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _Free
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[465]"></a>_UpdateChildPostions</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[467]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>

<P><STRONG><a name="[b0]"></a>_WIDGET_EFFECT_3D_DrawUpRect</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WIDGET_EFFECT_3D_DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>_WIDGET_EFFECT_3D_DrawDownRect</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _WIDGET_EFFECT_3D_DrawDownRect &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[af]"></a>_WIDGET_EFFECT_3D_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _WIDGET_EFFECT_3D_DrawDown &rArr; _WIDGET_EFFECT_3D_DrawDownRect &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>_WIDGET_EFFECT_3D_GetRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _WIDGET_EFFECT_3D_GetRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[471]"></a>_OnChildHasFocus</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _OnChildHasFocus &rArr; WM__IsAncestorOrSelf &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[487]"></a>_CheckCriticalHandles</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[47a]"></a>_DesktopHandle2Index</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>

<P><STRONG><a name="[486]"></a>ResetNextDrawWin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[475]"></a>_GethDrawWin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[474]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GethDrawWin
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[488]"></a>_DeleteAllChildren</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[489]"></a>_AddToLinList</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _AddToLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[48a]"></a>_Findy1</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>

<P><STRONG><a name="[48b]"></a>_Findx0</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[48c]"></a>_Findx1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>

<P><STRONG><a name="[490]"></a>WM__GetInvalidRectAbs</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
</UL>

<P><STRONG><a name="[48f]"></a>_FindNext_IVR</STRONG> (Thumb, 334 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[492]"></a>_Paint1</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _Paint1 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>

<P><STRONG><a name="[493]"></a>_Paint1Trans</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Paint1Trans &rArr; _Paint1 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransTopSiblings
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
</UL>

<P><STRONG><a name="[494]"></a>_PaintTransChildren</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransTopSiblings
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
</UL>

<P><STRONG><a name="[495]"></a>_PaintTransTopSiblings</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[74]"></a>_cbPaintMemDev</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(.text)
</UL>
<P><STRONG><a name="[498]"></a>_DrawNext</STRONG> (Thumb, 98 bytes, Stack size 112 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _DrawNext &rArr; WM__Paint &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W_M
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[75]"></a>cbBackWin</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = cbBackWin &rArr; GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(.text)
</UL>
<P><STRONG><a name="[76]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_bringtotop.o(.text)
</UL>
<P><STRONG><a name="[4a5]"></a>_InvalidateWindowAndDescs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_bringtotop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _InvalidateWindowAndDescs &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[4a6]"></a>_BringToTop</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, wm_bringtotop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _BringToTop &rArr; _InvalidateWindowAndDescs &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateWindowAndDescs
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[4ac]"></a>_GetDialogItem</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm_getdialogitem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[4af]"></a>_GetDefaultWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[4b0]"></a>_MoveDescendents</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[4b3]"></a>_Screen2hWin</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, wm_screen2win.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInWindow
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWinEx
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[4b6]"></a>WM__ReleaseCapture</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, wm_setcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__ReleaseCapture &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
</UL>

<P><STRONG><a name="[4bb]"></a>_GetNextChild</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetNextChild
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[4bc]"></a>_SetFocusOnNextChild</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[4bd]"></a>_GetPrevChild</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wm_setfocusonprevchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GetPrevChild &rArr; WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[4be]"></a>_SetFocusOnPrevChild</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_setfocusonprevchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _SetFocusOnPrevChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[4bf]"></a>_SetScrollbar</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>

<P><STRONG><a name="[4c9]"></a>_Screen2Win</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wmtouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Screen2Win &rArr; WM_Screen2hWin &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[77]"></a>_UserDraw</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, scope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _UserDraw &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scope.o(.text)
</UL>
<P><STRONG><a name="[4cf]"></a>ButtonChange</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, scope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = ButtonChange &rArr; MEUN_CREAT &rArr; MULTIPAGE_AddPage &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MEUN_CREAT
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback
</UL>

<P><STRONG><a name="[4d1]"></a>OnRadioValueChanged</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, scope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = OnRadioValueChanged &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback
</UL>

<P><STRONG><a name="[4d2]"></a>OnSliderValueChanged</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, scope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = OnSliderValueChanged &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Close
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Open
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback
</UL>

<P><STRONG><a name="[78]"></a>_cbCallback</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, scope.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = _cbCallback &rArr; ButtonChange &rArr; MEUN_CREAT &rArr; MULTIPAGE_AddPage &rArr; MULTIPAGE_SelectPage &rArr; _UpdatePositions &rArr; _AddScrollbar &rArr; SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderValueChanged
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnRadioValueChanged
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonChange
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scope.o(.text)
</UL>
<P><STRONG><a name="[4d4]"></a>Dialog1TimeDownChange</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, scop_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Dialog1TimeDownChange &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog1
</UL>

<P><STRONG><a name="[4d5]"></a>Dialog3ButtonChange</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, scop_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Dialog3ButtonChange &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
</UL>

<P><STRONG><a name="[4d6]"></a>Dialog3WAVEDownChange</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, scop_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Dialog3WAVEDownChange &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog3
</UL>

<P><STRONG><a name="[7a]"></a>_cbDialog1</STRONG> (Thumb, 742 bytes, Stack size 48 bytes, scop_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _cbDialog1 &rArr; DROPDOWN_SetAutoScroll &rArr; LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog1TimeDownChange
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextColor
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scop_menu.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>_cbDialog2</STRONG> (Thumb, 382 bytes, Stack size 40 bytes, scop_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _cbDialog2 &rArr; RADIO_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_IsChecked
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scop_menu.o(.text)
</UL>
<P><STRONG><a name="[7c]"></a>_cbDialog3</STRONG> (Thumb, 358 bytes, Stack size 40 bytes, scop_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = _cbDialog3 &rArr; DROPDOWN_SetFont &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3WAVEDownChange
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog3ButtonChange
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextColor
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scop_menu.o(.text)
</UL>
<P><STRONG><a name="[79]"></a>_cbFrameWin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scop_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _cbFrameWin &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr;  WM__InvalidateRectEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scop_menu.o(.text)
</UL>
<P><STRONG><a name="[515]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[50a]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[4e4]"></a>_fp_digits</STRONG> (Thumb, 428 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[7e]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
